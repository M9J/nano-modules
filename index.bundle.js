"use strict";(self.webpackChunknano_modules=self.webpackChunknano_modules||[]).push([[57],{89:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var o="",t=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),t&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=n(e),t&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(n,o,t,d,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var r=this[i][0];null!=r&&(s[r]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),o&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=o):l[2]=o),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),e.push(l))}},e}},963:n=>{n.exports=function(n){var e=n[1],o=n[3];if(!o)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(d," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},131:(n,e,o)=>{class t{node=document.createElement("div");constructor(n){n&&(this.node=document.createElement(n))}get node(){return this.node}toString(){return this.node}appendChild(n){this.node.appendChild(n)}setId(n){n&&(this.node.id=n)}setInnerHTML(n){n&&(this.node.innerHTML=n)}addClass(n){n&&this.node.classList.add(n)}removeClass(n){n&&this.node.classList.remove(n)}}class d extends t{#n=null;constructor(n){super(),null!==n&&(this.#n=n)}getModuleTemplate(){const n=new t("div");n.addClass("nano_modules_module"),n.setId(`nano_module_${this.#n}`);const e=this.getModuleNameTemplate();n.appendChild(e);const o=this.getModuleDescriptionTemplate();n.appendChild(o);const d=this.getModuleOutputLabelRowTemplate();n.appendChild(d);const a=this.getModuleOutputTemplate();return n.appendChild(a),n.node}getModuleNameTemplate(){const n=new t("div");n.addClass("nano_module_name");const e=new t("b");e.setInnerHTML("Name: ");const o=new t("span");return o.setId(`nano_module_${this.#n}_name`),n.appendChild(e.node),n.appendChild(o.node),n.node}getModuleDescriptionTemplate(){const n=new t("div");n.addClass("nano_module_description");const e=new t("b");e.setInnerHTML("Description: ");const o=new t("span");return o.setId(`nano_module_${this.#n}_description`),n.appendChild(e.node),n.appendChild(o.node),n.node}getModuleOutputLabelRowTemplate(){const n=new t("div");n.addClass("nano_module_output");const e=new t("b");e.setInnerHTML("Output: "),n.appendChild(e.node);const o=new t("span");o.setId(`nano_module_${this.#n}_pulse`),o.addClass("pulse"),o.addClass("hidden");const d=new t("span");d.addClass("pulse_dot"),o.appendChild(d.node),n.appendChild(o.node);const a=new t("span");a.addClass("expander"),n.appendChild(a.node);const s=new t("b");s.setInnerHTML("v"),n.appendChild(s.node);const i=new t("span");return i.setId(`nano_module_${this.#n}_version`),n.appendChild(i.node),n.node}getModuleOutputTemplate(){const n=new t("div");n.addClass("nano_module_output_container");const e=new t("div");return e.addClass("nano_module_output_restricted_scrollable"),e.setId(`nano_module_${this.#n}_output`),n.appendChild(e.node),n.node}#e(n,e){if(n){const o=document.getElementById(n);o&&(o.innerHTML=e)}}updateName(n){n&&this.#e(`nano_module_${this.#n}_name`,n)}updateDescription(n){n&&this.#e(`nano_module_${this.#n}_description`,n)}updateVersion(n){n&&this.#e(`nano_module_${this.#n}_version`,n)}updateOutput(n){null!==n&&this.#e(`nano_module_${this.#n}_output`,n)}enablePulse(){document.getElementById(`nano_module_${this.#n}_pulse`).classList.remove("hidden")}}class a extends t{constructor(){super(),this.addClass("nano_modules_modules"),this.setId("nano_modules_modules")}insertModuleTemplate(n){n&&document.getElementById("nano_modules_modules").appendChild(n)}}class s{#n=null;constructor(n){null!==n&&(this.#n=n)}#o(){return document.getElementById(`nano_module_${this.#n}_output`)}print(n){this.#o().innerHTML=n}printLine(n){const e=this.#o();"..."===e.innerText&&this.print(""),e.prepend(n,document.createElement("br"))}printElement(n){const e=this.#o();"..."===e.innerText&&this.print(""),e.appendChild(n)}}const i="https://M9J.github.io/nano_modules/",r=[],A=new class{MAIL_SEND_DELAY=0;RECIPIENTS={};constructor(n=0){n&&(this.MAIL_SEND_DELAY=n)}onReceive(n,e){this.RECIPIENTS[n]||(this.RECIPIENTS[n]=e)}send(n){let e=setTimeout((()=>{if(clearTimeout(e),Array.isArray(n.to))for(const e of n.to)this.RECIPIENTS[e]?this.RECIPIENTS[e](n):console.log(`Recipient not found: ${e}`);else this.RECIPIENTS[n.to]?this.RECIPIENTS[n.to](n):console.log(`Recipient not found: ${n.to}`)}),this.MAIL_SEND_DELAY)}};async function l(n){return await import(n)}function u(){return i}async function c(n,e){let o=e,t="...",i="...";const c=new d(n);(new a).insertModuleTemplate(c.getModuleTemplate()),c.updateName(o),c.updateDescription(t),c.updateVersion(i),c.updateOutput("...");const p=u()+e.substring(2),m=new((await await l(p)).default);o=m.MODULE_NAME?m.MODULE_NAME:"-",t=m.MODULE_DESCRIPTION?m.MODULE_DESCRIPTION:"-",i=m.MODULE_VERSION?m.MODULE_VERSION:"-";const E=m.MODULE_MAIL_ID||null,g=m.MODULE_MAIL_HANDLER||null;m.MODULE_OUTPUT=new s(n),E&&(m.MODULE_MAIL={send:n=>A.send(n)}),E&&g&&A.onReceive(E,g),c.updateName(o),c.updateDescription(t),c.updateVersion(i),m.MODULE_ID=n,r.push(m)}async function p(n){if(n.MODULE_PULSE&&new d(n.MODULE_ID).enablePulse(),n.MODULE_MAIN&&"function"==typeof n.MODULE_MAIN)try{await n.MODULE_MAIN()}catch(e){n.MODULE_OUTPUT.print(`ERROR: ${e.code}: ${e.message}`)}}class m extends t{constructor(){super(),this.addClass("nano_modules_footer");const n=this.footerRow1(),e=this.footerRow2();return this.appendChild(n.node),this.appendChild(e.node),this.node}footerRow1(){const n=new t("div");n.addClass("nano_modules_footer_row");const e=new t("a");e.addClass("github-badge"),e.node.href="https://github.com/m9j/nano-modules/actions";const o=new t("div");o.addClass("github-badge-label"),o.setInnerHTML("nano-modules");const d=new t("div");return d.addClass("github-badge-stage"),d.setInnerHTML("ACTIONS"),e.appendChild(o.node),e.appendChild(d.node),n.appendChild(e.node),n}footerRow2(){const n=new t("div");n.addClass("nano_modules_footer_row");const e=new t("a");e.addClass("github-badge"),e.node.href="https://github.com/m9j/nano_modules/actions";const o=new t("div");o.addClass("github-badge-label"),o.setInnerHTML("nano_modules");const d=new t("div");return d.addClass("github-badge-stage"),d.setInnerHTML("ACTIONS"),e.appendChild(o.node),e.appendChild(d.node),n.appendChild(e.node),n}}class E extends t{constructor(){return super(),this.addClass("nano_modules_title"),this.setInnerHTML("NanoModules"),this.node}}var g=o(72),C=o.n(g),f=o(825),h=o.n(f),_=o(659),B=o.n(_),b=o(56),x=o.n(b),w=o(540),y=o.n(w),v=o(113),k=o.n(v),M=o(497),I={};I.styleTagTransform=k(),I.setAttributes=x(),I.insert=B().bind(null,"head"),I.domAPI=h(),I.insertStyleElement=y(),C()(M.A,I),M.A&&M.A.locals&&M.A.locals;const T=new class extends t{constructor(){return super(),this.addClass("nano_modules_container"),this.appendChild(new E),this.appendChild((new a).node),this.appendChild(new m),this.node}};document.body.appendChild(T),async function(){console.log("> Nanomod.js _");const n=await async function(){try{const n=await async function(){try{let n=u();return n+="index.js",await l(n)}catch(n){console.log(n)}}();if(n)return n.MODULES}catch(n){const{code:e,message:o}=n;console.log(`${e}: ${o}`)}}();if(n){const e=document.getElementById("nano_modules_modules");n.length>0?e.innerHTML="":e.innerHTML="<div class='nano_modules_no_modules'>No Modules found</div>";for(const[e,o]of n.entries())o&&await c(e,o);for(const n of r)n&&await p(n)}}()},497:(n,e,o)=>{o.d(e,{A:()=>i});var t=o(963),d=o.n(t),a=o(89),s=o.n(a)()(d());s.push([n.id,'*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  color: #fff;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  background: #fff;\n  color: #000;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.nano_module_name,\n.nano_module_description,\n.nano_module_output {\n  padding: 0 8px;\n}\n\n.nano_module_name {\n  padding-top: 8px;\n}\n\n.nano_module_output {\n  padding-bottom: 8px;\n}\n\n.nano_module_output_container {\n  flex: 1;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 93px;\n  overflow: auto;\n  position: relative;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pulse {\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n}\n\n.pulse_dot {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: silver;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.expander {\n  display: inline-block;\n  width: 100%;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n.github-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0px;\n  overflow: hidden;\n  border: 1px solid #333;\n  text-decoration: none;\n  color: #fff;\n}\n\n.github-badge-label {\n  padding: 4px 8px;\n  background-color: #222;\n}\n\n.github-badge-stage {\n  padding: 4px 8px;\n  background-color: #333;\n}\n\n.github-badge-status {\n  padding: 4px 8px;\n  background-color: green;\n}\n\n.workflow-status {\n  content: "";\n  width: 8px;\n  height: 8px;\n  border-radius: 100px;\n  display: inline-block;\n  background-color: #333;\n  margin-left: 8px;\n}\n\n.workflow-status-progressing {\n  background-color: goldenrod;\n}\n\n.workflow-status-failed {\n  background-color: red;\n}\n\n.workflow-status-success {\n  background-color: greenyellow;\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: goldenrod;\n  }\n  50% {\n    background-color: silver;\n  }\n  75% {\n    background-color: greenyellow;\n  }\n  100% {\n    background: silver;\n  }\n}\n',"",{version:3,sources:["webpack://./src/nano-modules.css"],names:[],mappings:"AAAA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,MAAM;EACN,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,4DAA4D;EAC5D,aAAa;EACb,YAAY;EACZ,gBAAgB;EAChB,OAAO;EACP,2BAA2B;AAC7B;;AAEA;EACE,2CAA2C;EAC3C,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;;;EAGE,cAAc;AAChB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,OAAO;EACP,YAAY;EACZ,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;AACT;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,QAAQ;EACR,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;EACtB,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,UAAU;EACV,WAAW;EACX,oBAAoB;EACpB,qBAAqB;EACrB,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,qBAAqB;EACvB;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,kBAAkB;EACpB;AACF",sourcesContent:['*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  color: #fff;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  background: #fff;\n  color: #000;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.nano_module_name,\n.nano_module_description,\n.nano_module_output {\n  padding: 0 8px;\n}\n\n.nano_module_name {\n  padding-top: 8px;\n}\n\n.nano_module_output {\n  padding-bottom: 8px;\n}\n\n.nano_module_output_container {\n  flex: 1;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 93px;\n  overflow: auto;\n  position: relative;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pulse {\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n}\n\n.pulse_dot {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: silver;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.expander {\n  display: inline-block;\n  width: 100%;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n.github-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0px;\n  overflow: hidden;\n  border: 1px solid #333;\n  text-decoration: none;\n  color: #fff;\n}\n\n.github-badge-label {\n  padding: 4px 8px;\n  background-color: #222;\n}\n\n.github-badge-stage {\n  padding: 4px 8px;\n  background-color: #333;\n}\n\n.github-badge-status {\n  padding: 4px 8px;\n  background-color: green;\n}\n\n.workflow-status {\n  content: "";\n  width: 8px;\n  height: 8px;\n  border-radius: 100px;\n  display: inline-block;\n  background-color: #333;\n  margin-left: 8px;\n}\n\n.workflow-status-progressing {\n  background-color: goldenrod;\n}\n\n.workflow-status-failed {\n  background-color: red;\n}\n\n.workflow-status-success {\n  background-color: greenyellow;\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: goldenrod;\n  }\n  50% {\n    background-color: silver;\n  }\n  75% {\n    background-color: greenyellow;\n  }\n  100% {\n    background: silver;\n  }\n}\n'],sourceRoot:""}]);const i=s},72:n=>{var e=[];function o(n){for(var o=-1,t=0;t<e.length;t++)if(e[t].identifier===n){o=t;break}return o}function t(n,t){for(var a={},s=[],i=0;i<n.length;i++){var r=n[i],A=t.base?r[0]+t.base:r[0],l=a[A]||0,u="".concat(A," ").concat(l);a[A]=l+1;var c=o(u),p={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==c)e[c].references++,e[c].updater(p);else{var m=d(p,t);t.byIndex=i,e.splice(i,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function d(n,e){var o=e.domAPI(e);return o.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;o.update(n=e)}else o.remove()}}n.exports=function(n,d){var a=t(n=n||[],d=d||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=o(a[s]);e[i].references--}for(var r=t(n,d),A=0;A<a.length;A++){var l=o(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=r}}},659:n=>{var e={};n.exports=function(n,o){var t=function(n){if(void 0===e[n]){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(n){o=null}e[n]=o}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(o)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,o)=>{n.exports=function(n){var e=o.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(o){!function(n,e,o){var t="";o.supports&&(t+="@supports (".concat(o.supports,") {")),o.media&&(t+="@media ".concat(o.media," {"));var d=void 0!==o.layer;d&&(t+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),t+=o.css,d&&(t+="}"),o.media&&(t+="}"),o.supports&&(t+="}");var a=o.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,o)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=131)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,