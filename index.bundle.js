"use strict";(self.webpackChunknano_modules=self.webpackChunknano_modules||[]).push([[57,896],{89:n=>{n.exports=function(n){var o=[];return o.toString=function(){return this.map((function(o){var e="",t=void 0!==o[5];return o[4]&&(e+="@supports (".concat(o[4],") {")),o[2]&&(e+="@media ".concat(o[2]," {")),t&&(e+="@layer".concat(o[5].length>0?" ".concat(o[5]):""," {")),e+=n(o),t&&(e+="}"),o[2]&&(e+="}"),o[4]&&(e+="}"),e})).join("")},o.i=function(n,e,t,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);t&&s[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),o.push(A))}},o}},963:n=>{n.exports=function(n){var o=n[1],e=n[3];if(!e)return o;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),r="/*# ".concat(a," */");return[o].concat([r]).join("\n")}return[o].join("\n")}},70:(n,o,e)=>{async function t(){console.log("> Nanomod.js _");const n=[];try{const o=await async function(){try{let n=[];return n=await import(a),n}catch(n){console.log(n)}}();if(o){const e=o.default;if(Array.isArray(e)&&e.length>0)for(const o of e)n.push(o)}}catch(n){const{code:o,message:e}=n;console.log(`${o}: ${e}`)}return n}e.d(o,{A:()=>t});const a="https://cdn.jsdelivr.net/gh/M9J/nano_modules/index.js"},11:(n,o,e)=>{e.d(o,{A:()=>i});var t=e(963),a=e.n(t),r=e(89),s=e.n(r)()(a());s.push([n.id,".hello {\n  color: red;\n}\n\n*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  border: 1px solid #000;\n  padding: 0;\n  margin: 8px;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  border-bottom: 1px solid #000;\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_module {\n  border-bottom: 1px solid #000;\n  padding: 8px;\n}\n\n.nano_module_name {\n  display: flex;\n  align-items: center;\n}\n\n.nano_module_version {\n  color: #fff;\n  background-color: #000;\n  padding: 4px 6px;\n  font-size: 0.5em;\n  margin-left: 8px;\n  height: auto;\n  border-radius: 4px;\n}\n\n.nano_module_description {\n  /* font-size: 0.8em; */\n}\n\n.nano_module_output {\n}\n\n.nano_module_output_content {\n  padding: 8px;\n  margin-top: 8px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n","",{version:3,sources:["webpack://./src/nano_modules.css"],names:[],mappings:"AAAA;EACE,UAAU;AACZ;;AAEA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;AACT;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,YAAY;EACZ,sBAAsB;EACtB,UAAU;EACV,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,6BAA6B;EAC7B,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,sBAAsB;EACtB,gBAAgB;EAChB,gBAAgB;EAChB,gBAAgB;EAChB,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;AACA;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb",sourcesContent:[".hello {\n  color: red;\n}\n\n*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  border: 1px solid #000;\n  padding: 0;\n  margin: 8px;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  border-bottom: 1px solid #000;\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_module {\n  border-bottom: 1px solid #000;\n  padding: 8px;\n}\n\n.nano_module_name {\n  display: flex;\n  align-items: center;\n}\n\n.nano_module_version {\n  color: #fff;\n  background-color: #000;\n  padding: 4px 6px;\n  font-size: 0.5em;\n  margin-left: 8px;\n  height: auto;\n  border-radius: 4px;\n}\n\n.nano_module_description {\n  /* font-size: 0.8em; */\n}\n\n.nano_module_output {\n}\n\n.nano_module_output_content {\n  padding: 8px;\n  margin-top: 8px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n"],sourceRoot:""}]);const i=s},994:(n,o,e)=>{var t=e(72),a=e.n(t),r=e(825),s=e.n(r),i=e(659),d=e.n(i),c=e(56),A=e.n(c),l=e(540),u=e.n(l),p=e(113),m=e.n(p),f=e(11),E={};E.styleTagTransform=m(),E.setAttributes=A(),E.insert=d().bind(null,"head"),E.domAPI=s(),E.insertStyleElement=u(),a()(f.A,E),f.A&&f.A.locals&&f.A.locals},72:n=>{var o=[];function e(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function t(n,t){for(var r={},s=[],i=0;i<n.length;i++){var d=n[i],c=t.base?d[0]+t.base:d[0],A=r[c]||0,l="".concat(c," ").concat(A);r[c]=A+1;var u=e(l),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)o[u].references++,o[u].updater(p);else{var m=a(p,t);t.byIndex=i,o.splice(i,0,{identifier:l,updater:m,references:1})}s.push(l)}return s}function a(n,o){var e=o.domAPI(o);return e.update(n),function(o){if(o){if(o.css===n.css&&o.media===n.media&&o.sourceMap===n.sourceMap&&o.supports===n.supports&&o.layer===n.layer)return;e.update(n=o)}else e.remove()}}n.exports=function(n,a){var r=t(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<r.length;s++){var i=e(r[s]);o[i].references--}for(var d=t(n,a),c=0;c<r.length;c++){var A=e(r[c]);0===o[A].references&&(o[A].updater(),o.splice(A,1))}r=d}}},659:n=>{var o={};n.exports=function(n,e){var t=function(n){if(void 0===o[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}o[n]=e}return o[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},540:n=>{n.exports=function(n){var o=document.createElement("style");return n.setAttributes(o,n.attributes),n.insert(o,n.options),o}},56:(n,o,e)=>{n.exports=function(n){var o=e.nc;o&&n.setAttribute("nonce",o)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var o=n.insertStyleElement(n);return{update:function(e){!function(n,o,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),o.styleTagTransform(t,n,o.options)}(o,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(o)}}}},113:n=>{n.exports=function(n,o){if(o.styleSheet)o.styleSheet.cssText=n;else{for(;o.firstChild;)o.removeChild(o.firstChild);o.appendChild(document.createTextNode(n))}}},838:(n,o,e)=>{e.a(n,(async(n,o)=>{try{e(994);var t=e(70);function a(){const n=document.createElement("div");n.classList.add("nano_modules_container");const o=document.createElement("div");o.classList.add("nano_modules_title"),o.innerHTML="nano_modules";const e=document.createElement("div");return e.classList.add("nano_modules_modules"),e.id="nano_modules_modules",n.appendChild(o),n.appendChild(e),n}document.body.appendChild(a());const r=await(0,t.A)();if(r){const d=document.getElementById("nano_modules_modules");r.length>0?d.innerHTML="":d.innerHTML="<div class='nano_modules_no_modules'>No Modules found</div>";let c=0;for(const A of r)if(A){const l=new A,u=l.MODULE_NAME?l.MODULE_NAME:"",p=l.MODULE_DESCRIPTION?l.MODULE_DESCRIPTION:"",m=l.MODULE_VERSION?l.MODULE_VERSION:"";let f="";if(l.MODULE_MAIN&&"function"==typeof l.MODULE_MAIN)try{f=await l.MODULE_MAIN(i(++c))}catch(_){f=`<div class="nano_modules_module_error">${_.code}: ${_.message}</div>`}const E=s(u,p,m,f,c);d.innerHTML+=E}}function s(n,o,e,t,a){return`<div class="nano_modules_module">\n      <div class="nano_module_name">Module Name: ${n} <span class="nano_module_version">v${e}</span></div>\n      <div class="nano_module_description">Module Description: ${o}</div>\n      <div class="nano_module_output">Output:<div class="nano_module_output_content" id="mod_${a}">${t}</div></div>\n  </div>`}function i(n){return o=>{document.getElementById("mod_"+n).innerHTML=o}}o()}catch(g){o(g)}}),1)}},n=>{n(n.s=838)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,