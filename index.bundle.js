"use strict";(self.webpackChunknano_modules=self.webpackChunknano_modules||[]).push([[57],{89:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var o="",t=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),t&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=n(e),t&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(n,o,t,d,a){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var r=this[i][0];null!=r&&(s[r]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),o&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=o):l[2]=o),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),e.push(l))}},e}},963:n=>{n.exports=function(n){var e=n[1],o=n[3];if(!o)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(d," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},131:(n,e,o)=>{class t{node=document.createElement("div");constructor(n){n&&(this.node=document.createElement(n))}get node(){return this.node}toString(){return this.node}appendChild(n){this.node.appendChild(n)}setId(n){n&&(this.node.id=n)}setInnerHTML(n){n&&(this.node.innerHTML=n)}addClass(n){n&&this.node.classList.add(n)}removeClass(n){n&&this.node.classList.remove(n)}}class d extends t{#n=null;constructor(n){super(),null!==n&&(this.#n=n)}getModuleTemplate(){const n=new t("div");n.addClass("nano_modules_module"),n.setId(`nano_module_${this.#n}`);const e=this.getModuleNameTemplate();n.appendChild(e);const o=this.getModuleDescriptionTemplate();n.appendChild(o);const d=this.getModuleOutputLabelRowTemplate();n.appendChild(d);const a=this.getModuleOutputTemplate();return n.appendChild(a),n.node}getModuleNameTemplate(){const n=new t("div");n.addClass("nano_module_name");const e=new t("b");e.setInnerHTML("Name: ");const o=new t("span");return o.setId(`nano_module_${this.#n}_name`),n.appendChild(e.node),n.appendChild(o.node),n.node}getModuleDescriptionTemplate(){const n=new t("div");n.addClass("nano_module_description");const e=new t("b");e.setInnerHTML("Description: ");const o=new t("span");return o.setId(`nano_module_${this.#n}_description`),n.appendChild(e.node),n.appendChild(o.node),n.node}getModuleOutputLabelRowTemplate(){const n=new t("div");n.addClass("nano_module_output");const e=new t("b");e.setInnerHTML("Output: "),n.appendChild(e.node);const o=new t("span");o.setId(`nano_module_${this.#n}_pulse`),o.addClass("pulse"),o.addClass("hidden");const d=new t("span");d.addClass("pulse_dot"),o.appendChild(d.node),n.appendChild(o.node);const a=new t("span");a.addClass("expander"),n.appendChild(a.node);const s=new t("b");s.setInnerHTML("v"),n.appendChild(s.node);const i=new t("span");return i.setId(`nano_module_${this.#n}_version`),n.appendChild(i.node),n.node}getModuleOutputTemplate(){const n=new t("div");n.addClass("nano_module_output_container");const e=new t("div");return e.addClass("nano_module_output_restricted_scrollable"),e.setId(`nano_module_${this.#n}_output`),n.appendChild(e.node),n.node}#e(n,e){if(n){const o=document.getElementById(n);o&&(o.innerHTML=e)}}updateName(n){n&&this.#e(`nano_module_${this.#n}_name`,n)}updateDescription(n){n&&this.#e(`nano_module_${this.#n}_description`,n)}updateVersion(n){n&&this.#e(`nano_module_${this.#n}_version`,n)}updateOutput(n){null!==n&&this.#e(`nano_module_${this.#n}_output`,n)}enablePulse(){document.getElementById(`nano_module_${this.#n}_pulse`).classList.remove("hidden")}}class a extends t{constructor(){super(),this.addClass("nano_modules_modules"),this.setId("nano_modules_modules")}insertModuleTemplate(n){n&&document.getElementById("nano_modules_modules").appendChild(n)}}class s{#n=null;constructor(n){null!==n&&(this.#n=n)}#o(){return document.getElementById(`nano_module_${this.#n}_output`)}print(n){this.#o().innerHTML=n}printLine(n){const e=this.#o();"..."===e.innerText&&this.print(""),e.prepend(n,document.createElement("br"))}}const i="https://M9J.github.io/nano_modules/",r=[],A=new class{MAIL_SEND_DELAY=0;RECIPIENTS={};constructor(n=0){n&&(this.MAIL_SEND_DELAY=n)}onReceive(n,e){this.RECIPIENTS[n]||(this.RECIPIENTS[n]=e)}send(n){let e=setTimeout((()=>{if(clearTimeout(e),Array.isArray(n.to))for(const e of n.to)this.RECIPIENTS[e]?this.RECIPIENTS[e](n):console.log(`Recipient not found: ${e}`);else this.RECIPIENTS[n.to]?this.RECIPIENTS[n.to](n):console.log(`Recipient not found: ${n.to}`)}),this.MAIL_SEND_DELAY)}};async function l(n){return await import(n)}function u(){return i}async function c(n,e){let o=e,t="...",i="...";const c=new d(n);(new a).insertModuleTemplate(c.getModuleTemplate()),c.updateName(o),c.updateDescription(t),c.updateVersion(i),c.updateOutput("...");const p=u()+e.substring(2),m=new((await await l(p)).default);o=m.MODULE_NAME?m.MODULE_NAME:"-",t=m.MODULE_DESCRIPTION?m.MODULE_DESCRIPTION:"-",i=m.MODULE_VERSION?m.MODULE_VERSION:"-";const E=m.MODULE_MAIL_ID||null,g=m.MODULE_MAIL_HANDLER||null;m.MODULE_OUTPUT=new s(n),E&&(m.MODULE_MAIL={send:n=>A.send(n)}),E&&g&&A.onReceive(E,g),c.updateName(o),c.updateDescription(t),c.updateVersion(i),m.MODULE_ID=n,r.push(m)}async function p(n){if(n.MODULE_PULSE&&new d(n.MODULE_ID).enablePulse(),n.MODULE_MAIN&&"function"==typeof n.MODULE_MAIN)try{await n.MODULE_MAIN()}catch(e){n.MODULE_OUTPUT.print(`ERROR: ${e.code}: ${e.message}`)}}class m extends t{constructor(){super(),this.addClass("nano_modules_footer");const n=this.footerRow1(),e=this.footerRow2();return this.appendChild(n.node),this.appendChild(e.node),this.node}footerRow1(){const n=new t("div");n.addClass("nano_modules_footer_row");const e=new t("a");e.addClass("github-badge"),e.node.href="https://github.com/m9j/nano-modules/actions";const o=new t("div");o.addClass("github-badge-label"),o.setInnerHTML("nano-modules");const d=new t("div");return d.addClass("github-badge-stage"),d.setInnerHTML("ACTIONS"),e.appendChild(o.node),e.appendChild(d.node),n.appendChild(e.node),n}footerRow2(){const n=new t("div");n.addClass("nano_modules_footer_row");const e=new t("a");e.addClass("github-badge"),e.node.href="https://github.com/m9j/nano_modules/actions";const o=new t("div");o.addClass("github-badge-label"),o.setInnerHTML("nano_modules");const d=new t("div");return d.addClass("github-badge-stage"),d.setInnerHTML("ACTIONS"),e.appendChild(o.node),e.appendChild(d.node),n.appendChild(e.node),n}}class E extends t{constructor(){return super(),this.addClass("nano_modules_title"),this.setInnerHTML("NanoModules"),this.node}}var g=o(72),C=o.n(g),f=o(825),h=o.n(f),_=o(659),B=o.n(_),b=o(56),x=o.n(b),w=o(540),y=o.n(w),v=o(113),k=o.n(v),M=o(497),I={};I.styleTagTransform=k(),I.setAttributes=x(),I.insert=B().bind(null,"head"),I.domAPI=h(),I.insertStyleElement=y(),C()(M.A,I),M.A&&M.A.locals&&M.A.locals;const T=new class extends t{constructor(){return super(),this.addClass("nano_modules_container"),this.appendChild(new E),this.appendChild((new a).node),this.appendChild(new m),this.node}};document.body.appendChild(T),async function(){console.log("> Nanomod.js _");const n=await async function(){try{const n=await async function(){try{let n=u();return n+="index.js",await l(n)}catch(n){console.log(n)}}();if(n)return n.MODULES}catch(n){const{code:e,message:o}=n;console.log(`${e}: ${o}`)}}();if(n){const e=document.getElementById("nano_modules_modules");n.length>0?e.innerHTML="":e.innerHTML="<div class='nano_modules_no_modules'>No Modules found</div>";for(const[e,o]of n.entries())o&&await c(e,o);for(const n of r)n&&await p(n)}}()},497:(n,e,o)=>{o.d(e,{A:()=>i});var t=o(963),d=o.n(t),a=o(89),s=o.n(a)()(d());s.push([n.id,'*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  color: #fff;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  background: #fff;\n  color: #000;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.nano_module_name,\n.nano_module_description,\n.nano_module_output {\n  padding: 0 8px;\n}\n\n.nano_module_name {\n  padding-top: 8px;\n}\n\n.nano_module_output {\n  padding-bottom: 8px;\n}\n\n.nano_module_output_container {\n  flex: 1;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 93px;\n  overflow: auto;\n  position: relative;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pulse {\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n}\n\n.pulse_dot {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: silver;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.expander {\n  display: inline-block;\n  width: 100%;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n.github-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0px;\n  overflow: hidden;\n  border: 1px solid #333;\n  text-decoration: none;\n  color: #fff;\n}\n\n.github-badge-label {\n  padding: 4px 8px;\n  background-color: #222;\n}\n\n.github-badge-stage {\n  padding: 4px 8px;\n  background-color: #333;\n}\n\n.github-badge-status {\n  padding: 4px 8px;\n  background-color: green;\n}\n\n.workflow-status {\n  content: "";\n  width: 8px;\n  height: 8px;\n  border-radius: 100px;\n  display: inline-block;\n  background-color: #333;\n  margin-left: 8px;\n}\n\n.workflow-status-progressing {\n  background-color: goldenrod;\n}\n\n.workflow-status-failed {\n  background-color: red;\n}\n\n.workflow-status-success {\n  background-color: greenyellow;\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: goldenrod;\n  }\n  50% {\n    background-color: silver;\n  }\n  75% {\n    background-color: greenyellow;\n  }\n  100% {\n    background: silver;\n  }\n}\n',"",{version:3,sources:["webpack://./src/nano-modules.css"],names:[],mappings:"AAAA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,MAAM;EACN,UAAU;EACV,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,4DAA4D;EAC5D,aAAa;EACb,YAAY;EACZ,gBAAgB;EAChB,OAAO;EACP,2BAA2B;AAC7B;;AAEA;EACE,2CAA2C;EAC3C,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;;;EAGE,cAAc;AAChB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,OAAO;EACP,YAAY;EACZ,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;AACT;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,QAAQ;EACR,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;EACtB,qBAAqB;EACrB,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,UAAU;EACV,WAAW;EACX,oBAAoB;EACpB,qBAAqB;EACrB,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,qBAAqB;EACvB;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,kBAAkB;EACpB;AACF",sourcesContent:['*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n  color: #fff;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  background: #fff;\n  color: #000;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.nano_module_name,\n.nano_module_description,\n.nano_module_output {\n  padding: 0 8px;\n}\n\n.nano_module_name {\n  padding-top: 8px;\n}\n\n.nano_module_output {\n  padding-bottom: 8px;\n}\n\n.nano_module_output_container {\n  flex: 1;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 93px;\n  overflow: auto;\n  position: relative;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n}\n\n.pulse {\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n}\n\n.pulse_dot {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: silver;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.expander {\n  display: inline-block;\n  width: 100%;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n.github-badge {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0px;\n  overflow: hidden;\n  border: 1px solid #333;\n  text-decoration: none;\n  color: #fff;\n}\n\n.github-badge-label {\n  padding: 4px 8px;\n  background-color: #222;\n}\n\n.github-badge-stage {\n  padding: 4px 8px;\n  background-color: #333;\n}\n\n.github-badge-status {\n  padding: 4px 8px;\n  background-color: green;\n}\n\n.workflow-status {\n  content: "";\n  width: 8px;\n  height: 8px;\n  border-radius: 100px;\n  display: inline-block;\n  background-color: #333;\n  margin-left: 8px;\n}\n\n.workflow-status-progressing {\n  background-color: goldenrod;\n}\n\n.workflow-status-failed {\n  background-color: red;\n}\n\n.workflow-status-success {\n  background-color: greenyellow;\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: goldenrod;\n  }\n  50% {\n    background-color: silver;\n  }\n  75% {\n    background-color: greenyellow;\n  }\n  100% {\n    background: silver;\n  }\n}\n'],sourceRoot:""}]);const i=s},72:n=>{var e=[];function o(n){for(var o=-1,t=0;t<e.length;t++)if(e[t].identifier===n){o=t;break}return o}function t(n,t){for(var a={},s=[],i=0;i<n.length;i++){var r=n[i],A=t.base?r[0]+t.base:r[0],l=a[A]||0,u="".concat(A," ").concat(l);a[A]=l+1;var c=o(u),p={css:r[1],media:r[2],sourceMap:r[3],supports:r[4],layer:r[5]};if(-1!==c)e[c].references++,e[c].updater(p);else{var m=d(p,t);t.byIndex=i,e.splice(i,0,{identifier:u,updater:m,references:1})}s.push(u)}return s}function d(n,e){var o=e.domAPI(e);return o.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;o.update(n=e)}else o.remove()}}n.exports=function(n,d){var a=t(n=n||[],d=d||{});return function(n){n=n||[];for(var s=0;s<a.length;s++){var i=o(a[s]);e[i].references--}for(var r=t(n,d),A=0;A<a.length;A++){var l=o(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=r}}},659:n=>{var e={};n.exports=function(n,o){var t=function(n){if(void 0===e[n]){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(n){o=null}e[n]=o}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(o)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,o)=>{n.exports=function(n){var e=o.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(o){!function(n,e,o){var t="";o.supports&&(t+="@supports (".concat(o.supports,") {")),o.media&&(t+="@media ".concat(o.media," {"));var d=void 0!==o.layer;d&&(t+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),t+=o.css,d&&(t+="}"),o.media&&(t+="}"),o.supports&&(t+="}");var a=o.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,o)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=131)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJrR0FNQUEsRUFBT0MsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNEVYLE9BekVBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0FvQjVCLE9BbkJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBRXZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BRW5DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRTVFQyxHQUFXTixFQUF1QkssR0FDOUJFLElBQ0ZELEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRVRELEVBQUssS0FDUEMsR0FBVyxLQUVOQSxDQUNULElBQUdJLEtBQUssR0FDVixFQUdBVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUU3QixJQUFJQyxFQUF5QixDQUFDLEVBQzlCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlDLEVBQUtqQixLQUFLZ0IsR0FBRyxHQUNQLE1BQU5DLElBQ0ZGLEVBQXVCRSxJQUFNLEVBRWpDLENBRUYsSUFBSyxJQUFJQyxFQUFLLEVBQUdBLEVBQUtULEVBQVFILE9BQVFZLElBQU0sQ0FDMUMsSUFBSWhCLEVBQU8sR0FBR0csT0FBT0ksRUFBUVMsSUFDekJQLEdBQVVJLEVBQXVCYixFQUFLLFdBR3JCLElBQVZXLFNBQ2MsSUFBWlgsRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBU0csT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLE1BRi9GQSxFQUFLLEdBQUtXLEdBTVZILElBQ0dSLEVBQUssSUFHUkEsRUFBSyxHQUFLLFVBQVVHLE9BQU9ILEVBQUssR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS1EsR0FIVlIsRUFBSyxHQUFLUSxHQU1WRSxJQUNHVixFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjRyxPQUFPSCxFQUFLLEdBQUksT0FBT0csT0FBT0gsRUFBSyxHQUFJLEtBQy9EQSxFQUFLLEdBQUtVLEdBSFZWLEVBQUssR0FBSyxHQUFHRyxPQUFPTyxJQU14QmQsRUFBS3FCLEtBQUtqQixHQUNaLENBQ0YsRUFDT0osQ0FDVCxDLFVDbEZBSCxFQUFPQyxRQUFVLFNBQVVNLEdBQ3pCLElBQUlDLEVBQVVELEVBQUssR0FDZmtCLEVBQWFsQixFQUFLLEdBQ3RCLElBQUtrQixFQUNILE9BQU9qQixFQUVULEdBQW9CLG1CQUFUa0IsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0R0QixPQUFPaUIsR0FDN0VNLEVBQWdCLE9BQU92QixPQUFPc0IsRUFBTSxPQUN4QyxNQUFPLENBQUN4QixHQUFTRSxPQUFPLENBQUN1QixJQUFnQnJCLEtBQUssS0FDaEQsQ0FDQSxNQUFPLENBQUNKLEdBQVNJLEtBQUssS0FDeEIsQyxnQkNmZSxNQUFNc0IsRUFDbkJDLEtBQU9DLFNBQVNDLGNBQWMsT0FFOUJDLFdBQUFBLENBQVlDLEdBQ05BLElBQ0ZsQyxLQUFLOEIsS0FBT0MsU0FBU0MsY0FBY0UsR0FFdkMsQ0FFQSxRQUFJSixHQUNGLE9BQU85QixLQUFLOEIsSUFDZCxDQUVBL0IsUUFBQUEsR0FDRSxPQUFPQyxLQUFLOEIsSUFDZCxDQUVBSyxXQUFBQSxDQUFZQyxHQUNWcEMsS0FBSzhCLEtBQUtLLFlBQVlDLEVBQ3hCLENBRUFDLEtBQUFBLENBQU1wQixHQUNBQSxJQUNGakIsS0FBSzhCLEtBQUtiLEdBQUtBLEVBRW5CLENBRUFxQixZQUFBQSxDQUFhQyxHQUNQQSxJQUNGdkMsS0FBSzhCLEtBQUtTLFVBQVlBLEVBRTFCLENBRUFDLFFBQUFBLENBQVNDLEdBQ0hBLEdBQ0Z6QyxLQUFLOEIsS0FBS1ksVUFBVUMsSUFBSUYsRUFFNUIsQ0FFQUcsV0FBQUEsQ0FBWUgsR0FDTkEsR0FDRnpDLEtBQUs4QixLQUFLWSxVQUFVRyxPQUFPSixFQUUvQixFQ3pDYSxNQUFNSyxVQUFlakIsRUFDbEMsR0FBUyxLQUVUSSxXQUFBQSxDQUFZYyxHQUNWQyxRQUNjLE9BQVZELElBQWdCL0MsTUFBSyxFQUFTK0MsRUFDcEMsQ0FFQUUsaUJBQUFBLEdBQ0UsTUFBTUMsRUFBa0IsSUFBSXJCLEVBQVEsT0FDcENxQixFQUFnQlYsU0FBUyx1QkFDekJVLEVBQWdCYixNQUFNLGVBQWVyQyxNQUFLLEtBQzFDLE1BQU1tRCxFQUFhbkQsS0FBS29ELHdCQUN4QkYsRUFBZ0JmLFlBQVlnQixHQUM1QixNQUFNRSxFQUFvQnJELEtBQUtzRCwrQkFDL0JKLEVBQWdCZixZQUFZa0IsR0FDNUIsTUFBTUUsRUFBdUJ2RCxLQUFLd0Qsa0NBQ2xDTixFQUFnQmYsWUFBWW9CLEdBQzVCLE1BQU1FLEVBQWV6RCxLQUFLMEQsMEJBRTFCLE9BREFSLEVBQWdCZixZQUFZc0IsR0FDckJQLEVBQWdCcEIsSUFDekIsQ0FFQXNCLHFCQUFBQSxHQUNFLE1BQU1ELEVBQWEsSUFBSXRCLEVBQVEsT0FDL0JzQixFQUFXWCxTQUFTLG9CQUNwQixNQUFNbUIsRUFBWSxJQUFJOUIsRUFBUSxLQUM5QjhCLEVBQVVyQixhQUFhLFVBQ3ZCLE1BQU1zQixFQUFRLElBQUkvQixFQUFRLFFBSTFCLE9BSEErQixFQUFNdkIsTUFBTSxlQUFlckMsTUFBSyxVQUNoQ21ELEVBQVdoQixZQUFZd0IsRUFBVTdCLE1BQ2pDcUIsRUFBV2hCLFlBQVl5QixFQUFNOUIsTUFDdEJxQixFQUFXckIsSUFDcEIsQ0FFQXdCLDRCQUFBQSxHQUNFLE1BQU1ELEVBQW9CLElBQUl4QixFQUFRLE9BQ3RDd0IsRUFBa0JiLFNBQVMsMkJBQzNCLE1BQU1tQixFQUFZLElBQUk5QixFQUFRLEtBQzlCOEIsRUFBVXJCLGFBQWEsaUJBQ3ZCLE1BQU1zQixFQUFRLElBQUkvQixFQUFRLFFBSTFCLE9BSEErQixFQUFNdkIsTUFBTSxlQUFlckMsTUFBSyxpQkFDaENxRCxFQUFrQmxCLFlBQVl3QixFQUFVN0IsTUFDeEN1QixFQUFrQmxCLFlBQVl5QixFQUFNOUIsTUFDN0J1QixFQUFrQnZCLElBQzNCLENBRUEwQiwrQkFBQUEsR0FDRSxNQUFNRCxFQUF1QixJQUFJMUIsRUFBUSxPQUN6QzBCLEVBQXFCZixTQUFTLHNCQUM5QixNQUFNbUIsRUFBWSxJQUFJOUIsRUFBUSxLQUM5QjhCLEVBQVVyQixhQUFhLFlBQ3ZCaUIsRUFBcUJwQixZQUFZd0IsRUFBVTdCLE1BQzNDLE1BQU0rQixFQUFRLElBQUloQyxFQUFRLFFBQzFCZ0MsRUFBTXhCLE1BQU0sZUFBZXJDLE1BQUssV0FDaEM2RCxFQUFNckIsU0FBUyxTQUNmcUIsRUFBTXJCLFNBQVMsVUFDZixNQUFNc0IsRUFBVyxJQUFJakMsRUFBUSxRQUM3QmlDLEVBQVN0QixTQUFTLGFBQ2xCcUIsRUFBTTFCLFlBQVkyQixFQUFTaEMsTUFDM0J5QixFQUFxQnBCLFlBQVkwQixFQUFNL0IsTUFDdkMsTUFBTWlDLEVBQVcsSUFBSWxDLEVBQVEsUUFDN0JrQyxFQUFTdkIsU0FBUyxZQUNsQmUsRUFBcUJwQixZQUFZNEIsRUFBU2pDLE1BQzFDLE1BQU1rQyxFQUFlLElBQUluQyxFQUFRLEtBQ2pDbUMsRUFBYTFCLGFBQWEsS0FDMUJpQixFQUFxQnBCLFlBQVk2QixFQUFhbEMsTUFDOUMsTUFBTW1DLEVBQVUsSUFBSXBDLEVBQVEsUUFHNUIsT0FGQW9DLEVBQVE1QixNQUFNLGVBQWVyQyxNQUFLLGFBQ2xDdUQsRUFBcUJwQixZQUFZOEIsRUFBUW5DLE1BQ2xDeUIsRUFBcUJ6QixJQUM5QixDQUVBNEIsdUJBQUFBLEdBQ0UsTUFBTVEsRUFBd0IsSUFBSXJDLEVBQVEsT0FDMUNxQyxFQUFzQjFCLFNBQVMsZ0NBQy9CLE1BQU1pQixFQUFlLElBQUk1QixFQUFRLE9BSWpDLE9BSEE0QixFQUFhakIsU0FBUyw0Q0FDdEJpQixFQUFhcEIsTUFBTSxlQUFlckMsTUFBSyxZQUN2Q2tFLEVBQXNCL0IsWUFBWXNCLEVBQWEzQixNQUN4Q29DLEVBQXNCcEMsSUFDL0IsQ0FFQSxHQUFhcUMsRUFBUVAsR0FDbkIsR0FBSU8sRUFBUSxDQUNWLE1BQU1DLEVBQU9yQyxTQUFTc0MsZUFBZUYsR0FDakNDLElBQU1BLEVBQUs3QixVQUFZcUIsRUFDN0IsQ0FDRixDQUVBVSxVQUFBQSxDQUFXQyxHQUNMQSxHQUNGdkUsTUFBSyxFQUFhLGVBQWVBLE1BQUssU0FBZXVFLEVBRXpELENBRUFDLGlCQUFBQSxDQUFrQkMsR0FDWkEsR0FDRnpFLE1BQUssRUFBYSxlQUFlQSxNQUFLLGdCQUFzQnlFLEVBRWhFLENBRUFDLGFBQUFBLENBQWNULEdBQ1JBLEdBQ0ZqRSxNQUFLLEVBQWEsZUFBZUEsTUFBSyxZQUFrQmlFLEVBRTVELENBRUFVLFlBQUFBLENBQWFDLEdBQ0ksT0FBWEEsR0FDRjVFLE1BQUssRUFBYSxlQUFlQSxNQUFLLFdBQWlCNEUsRUFFM0QsQ0FFQUMsV0FBQUEsR0FDRTlDLFNBQ0dzQyxlQUFlLGVBQWVyRSxNQUFLLFdBQ25DMEMsVUFBVUcsT0FBTyxTQUN0QixFQ3RIYSxNQUFNaUMsVUFBZ0JqRCxFQUNuQ0ksV0FBQUEsR0FDRWUsUUFDQWhELEtBQUt3QyxTQUFTLHdCQUNkeEMsS0FBS3FDLE1BQU0sdUJBQ2IsQ0FFQTBDLG9CQUFBQSxDQUFxQkMsR0FDZkEsR0FDY2pELFNBQVNzQyxlQUFlLHdCQUNoQ2xDLFlBQVk2QyxFQUV4QixFQ2RhLE1BQU1DLEVBQ25CLEdBQVMsS0FFVGhELFdBQUFBLENBQVljLEdBQ0ksT0FBVkEsSUFBZ0IvQyxNQUFLLEVBQVMrQyxFQUNwQyxDQUVBLEtBSUUsT0FId0JoQixTQUFTc0MsZUFDL0IsZUFBZXJFLE1BQUssV0FHeEIsQ0FFQWtGLEtBQUFBLENBQU1DLEdBQ2NuRixNQUFLLElBQ2J1QyxVQUFZNEMsQ0FDeEIsQ0FFQUMsU0FBQUEsQ0FBVUQsR0FDUixNQUFNRSxFQUFrQnJGLE1BQUssSUFDSyxRQUE5QnFGLEVBQWdCQyxXQUFxQnRGLEtBQUtrRixNQUFNLElBQ3BERyxFQUFnQkUsUUFBUUosRUFBV3BELFNBQVNDLGNBQWMsTUFDNUQsRUNsQkYsTUFDTXdELEVBQXVCLHNDQUN2QkMsRUFBYyxHQUNkQyxFQUFXLElDUkYsTUFDYkMsZ0JBQWtCLEVBQ2xCQyxXQUFhLENBQUMsRUFFZDNELFdBQUFBLENBQVk0RCxFQUFRLEdBQ2RBLElBQU83RixLQUFLMkYsZ0JBQWtCRSxFQUNwQyxDQUVBQyxTQUFBQSxDQUFVQyxFQUFRQyxHQUNYaEcsS0FBSzRGLFdBQVdHLEtBQVMvRixLQUFLNEYsV0FBV0csR0FBVUMsRUFDMUQsQ0FFQUMsSUFBQUEsQ0FBS0MsR0FDSCxJQUFJQyxFQUFNQyxZQUFXLEtBRW5CLEdBREFDLGFBQWFGLEdBQ1RHLE1BQU1DLFFBQVFMLEVBQUtNLElBQ3JCLElBQUssTUFBTUMsS0FBZVAsRUFBS00sR0FDeEJ4RyxLQUFLNEYsV0FBV2EsR0FFaEJ6RyxLQUFLNEYsV0FBV2EsR0FBYVAsR0FEaENRLFFBQVFDLElBQUksd0JBQXdCRixVQUluQ3pHLEtBQUs0RixXQUFXTSxFQUFLTSxJQUVyQnhHLEtBQUs0RixXQUFXTSxFQUFLTSxJQUFJTixHQUQ1QlEsUUFBUUMsSUFBSSx3QkFBd0JULEVBQUtNLEtBRTdDLEdBQ0N4RyxLQUFLMkYsZ0JBQ1YsR0R1QkZpQixlQUFlQyxFQUFVQyxHQUN2QixhQUFhQyxPQUVYRCxFQUVKLENBRUEsU0FBU0UsSUFFWSxPQUFPeEIsQ0FFNUIsQ0FFQW9CLGVBQWVLLEVBQWdCbEUsRUFBT21FLEdBQ3BDLElBQUkvRCxFQUFhK0QsRUFDYjdELEVBQW9CLE1BQ3BCOEQsRUFBZ0IsTUFFcEIsTUFBTXhILEVBQVMsSUFBSW1ELEVBQU9DLElBQzFCLElBQUkrQixHQUFVQyxxQkFBcUJwRixFQUFPc0QscUJBQzFDdEQsRUFBTzJFLFdBQVduQixHQUNsQnhELEVBQU82RSxrQkFBa0JuQixHQUN6QjFELEVBQU8rRSxjQUFjeUMsR0FDckJ4SCxFQUFPZ0YsYUFOWSxPQU9uQixNQUFNeUMsRUFBYUosSUFBc0JFLEVBQVdHLFVBQVUsR0FFeERDLEVBQVcsaUJBRGtCVCxFQUFVTyxJQUNURyxTQUNwQ3BFLEVBQWFtRSxFQUFTRSxZQUFjRixFQUFTRSxZQUFjLElBQzNEbkUsRUFBb0JpRSxFQUFTRyxtQkFDekJILEVBQVNHLG1CQUNULElBQ0pOLEVBQWdCRyxFQUFTSSxlQUFpQkosRUFBU0ksZUFBaUIsSUFDcEUsTUFBTUMsRUFBZUwsRUFBU00sZ0JBQWtCLEtBQzFDQyxFQUFvQlAsRUFBU1EscUJBQXVCLEtBQzFEUixFQUFTUyxjQUFnQixJQUFJOUMsRUFBV2xDLEdBQ3BDNEUsSUFBY0wsRUFBU1UsWUFBYyxDQUFFL0IsS0FBT2dDLEdBQU12QyxFQUFTTyxLQUFLZ0MsS0FDbEVOLEdBQWdCRSxHQUNsQm5DLEVBQVNJLFVBQVU2QixFQUFjRSxHQUVuQ2xJLEVBQU8yRSxXQUFXbkIsR0FDbEJ4RCxFQUFPNkUsa0JBQWtCbkIsR0FDekIxRCxFQUFPK0UsY0FBY3lDLEdBQ3JCRyxFQUFTWSxVQUFZbkYsRUFDckIwQyxFQUFZdEUsS0FBS21HLEVBQ25CLENBRUFWLGVBQWV1QixFQUFXYixHQU14QixHQUxpQkEsRUFBU2MsY0FFVCxJQUFJdEYsRUFBT3dFLEVBQVNZLFdBQzVCckQsY0FFTHlDLEVBQVNlLGFBQStDLG1CQUF6QmYsRUFBU2UsWUFDMUMsVUFDUWYsRUFBU2UsYUFDakIsQ0FBRSxNQUFPQyxHQUNQaEIsRUFBU1MsY0FBYzdDLE1BQU0sVUFBVW9ELEVBQU1DLFNBQVNELEVBQU1FLFVBQzlELENBRUosQ0UzR2UsTUFBTUMsVUFBZTVHLEVBQ2xDSSxXQUFBQSxHQUNFZSxRQUNBaEQsS0FBS3dDLFNBQVMsdUJBQ2QsTUFBTWtHLEVBQWExSSxLQUFLMEksYUFDbEJDLEVBQWEzSSxLQUFLMkksYUFHeEIsT0FGQTNJLEtBQUttQyxZQUFZdUcsRUFBVzVHLE1BQzVCOUIsS0FBS21DLFlBQVl3RyxFQUFXN0csTUFDckI5QixLQUFLOEIsSUFDZCxDQUVBNEcsVUFBQUEsR0FDRSxNQUFNNUcsRUFBTyxJQUFJRCxFQUFRLE9BQ3pCQyxFQUFLVSxTQUFTLDJCQUNkLE1BQU1vRyxFQUFPLElBQUkvRyxFQUFRLEtBQ3pCK0csRUFBS3BHLFNBQVMsZ0JBQ2RvRyxFQUFLOUcsS0FBSytHLEtBQU8sOENBQ2pCLE1BQU1DLEVBQW1CLElBQUlqSCxFQUFRLE9BQ3JDaUgsRUFBaUJ0RyxTQUFTLHNCQUMxQnNHLEVBQWlCeEcsYUFBYSxnQkFDOUIsTUFBTXlHLEVBQW9CLElBQUlsSCxFQUFRLE9BTXRDLE9BTEFrSCxFQUFrQnZHLFNBQVMsc0JBQzNCdUcsRUFBa0J6RyxhQUFhLFdBQy9Cc0csRUFBS3pHLFlBQVkyRyxFQUFpQmhILE1BQ2xDOEcsRUFBS3pHLFlBQVk0RyxFQUFrQmpILE1BQ25DQSxFQUFLSyxZQUFZeUcsRUFBSzlHLE1BQ2ZBLENBQ1QsQ0FFQTZHLFVBQUFBLEdBQ0UsTUFBTTdHLEVBQU8sSUFBSUQsRUFBUSxPQUN6QkMsRUFBS1UsU0FBUywyQkFDZCxNQUFNb0csRUFBTyxJQUFJL0csRUFBUSxLQUN6QitHLEVBQUtwRyxTQUFTLGdCQUNkb0csRUFBSzlHLEtBQUsrRyxLQUFPLDhDQUNqQixNQUFNQyxFQUFtQixJQUFJakgsRUFBUSxPQUNyQ2lILEVBQWlCdEcsU0FBUyxzQkFDMUJzRyxFQUFpQnhHLGFBQWEsZ0JBQzlCLE1BQU15RyxFQUFvQixJQUFJbEgsRUFBUSxPQU10QyxPQUxBa0gsRUFBa0J2RyxTQUFTLHNCQUMzQnVHLEVBQWtCekcsYUFBYSxXQUMvQnNHLEVBQUt6RyxZQUFZMkcsRUFBaUJoSCxNQUNsQzhHLEVBQUt6RyxZQUFZNEcsRUFBa0JqSCxNQUNuQ0EsRUFBS0ssWUFBWXlHLEVBQUs5RyxNQUNmQSxDQUNULEVDN0NhLE1BQU1rSCxVQUFlbkgsRUFDbENJLFdBQUFBLEdBSUUsT0FIQWUsUUFDQWhELEtBQUt3QyxTQUFTLHNCQUNkeEMsS0FBS3NDLGFBQWEsZUFDWHRDLEtBQUs4QixJQUNkLEUsdUhDR0VtSCxFQUFVLENBQUMsRUFFZkEsRUFBUUMsa0JBQW9CLElBQzVCRCxFQUFRRSxjQUFnQixJQUN4QkYsRUFBUUcsT0FBUyxTQUFjLEtBQU0sUUFDckNILEVBQVFJLE9BQVMsSUFDakJKLEVBQVFLLG1CQUFxQixJQUVoQixJQUFJLElBQVNMLEdBS0osS0FBVyxJQUFRTSxRQUFTLElBQVFBLE9BQW5ELE1DcEJEQyxFQUFNLElDQ0csY0FBMkIzSCxFQUN4Q0ksV0FBQUEsR0FNRSxPQUxBZSxRQUNBaEQsS0FBS3dDLFNBQVMsMEJBQ2R4QyxLQUFLbUMsWUFBWSxJQUFJNkcsR0FDckJoSixLQUFLbUMsYUFBWSxJQUFJMkMsR0FBVWhELE1BQy9COUIsS0FBS21DLFlBQVksSUFBSXNHLEdBQ2R6SSxLQUFLOEIsSUFDZCxHRFJGQyxTQUFTMEgsS0FBS3RILFlBQVlxSCxHTEtYNUMsaUJBQ2JGLFFBQVFDLElBQUksa0JBQ1osTUFBTStDLFFBa0JSOUMsaUJBQ0UsSUFDRSxNQUFNK0MsUUFRVi9DLGlCQUNFLElBQ0UsSUFBSWdELEVBQWE1QyxJQUVqQixPQURBNEMsR0FBYyxpQkFDRC9DLEVBQVUrQyxFQUN6QixDQUFFLE1BQU9DLEdBQ1BuRCxRQUFRQyxJQUFJa0QsRUFDZCxDQUNGLENBaEJpQ0MsR0FDN0IsR0FBSUgsRUFBZ0IsT0FBT0EsRUFBZUksT0FDNUMsQ0FBRSxNQUFPRixHQUNQLE1BQU0sS0FBRXRCLEVBQUksUUFBRUMsR0FBWXFCLEVBQzFCbkQsUUFBUUMsSUFBSSxHQUFHNEIsTUFBU0MsSUFDMUIsQ0FDRixDQTFCaUN3QixHQUMvQixHQUFJTixFQUFrQixDQUNwQixNQUFNTyxFQUE2QmxJLFNBQVNzQyxlQUMxQyx3QkFFRXFGLEVBQWlCcEosT0FBUyxFQUFHMkosRUFBMkIxSCxVQUFZLEdBRXRFMEgsRUFBMkIxSCxVQUN6Qiw4REFDSixJQUFLLE1BQU9RLEVBQU9tSCxLQUFtQlIsRUFBaUJTLFVBQ2pERCxTQUFzQmpELEVBQWdCbEUsRUFBT21ILEdBRW5ELElBQUssTUFBTXZLLEtBQVU4RixFQUNmOUYsU0FBY3dJLEVBQVd4SSxFQUVqQyxDQUNGLENLdEJBeUssRSwrREVISUMsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JsSixLQUFLLENBQUN4QixFQUFPc0IsR0FBSSxzNEdBME50QyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyxvQ0FBb0MsTUFBUSxHQUFHLFNBQVcsb3NEQUFvc0QsZUFBaUIsQ0FBQyx1NEdBQXk0RyxXQUFhLE1BRXBzSyxTLFNDL05BLElBQUlxSixFQUFjLEdBQ2xCLFNBQVNDLEVBQXFCQyxHQUU1QixJQURBLElBQUlDLEdBQVUsRUFDTGpLLEVBQUksRUFBR0EsRUFBSThKLEVBQVloSyxPQUFRRSxJQUN0QyxHQUFJOEosRUFBWTlKLEdBQUdnSyxhQUFlQSxFQUFZLENBQzVDQyxFQUFTakssRUFDVCxLQUNGLENBRUYsT0FBT2lLLENBQ1QsQ0FDQSxTQUFTQyxFQUFhNUssRUFBTW1KLEdBRzFCLElBRkEsSUFBSTBCLEVBQWEsQ0FBQyxFQUNkQyxFQUFjLEdBQ1RwSyxFQUFJLEVBQUdBLEVBQUlWLEVBQUtRLE9BQVFFLElBQUssQ0FDcEMsSUFBSU4sRUFBT0osRUFBS1UsR0FDWlMsRUFBS2dJLEVBQVE0QixLQUFPM0ssRUFBSyxHQUFLK0ksRUFBUTRCLEtBQU8zSyxFQUFLLEdBQ2xENEssRUFBUUgsRUFBVzFKLElBQU8sRUFDMUJ1SixFQUFhLEdBQUduSyxPQUFPWSxFQUFJLEtBQUtaLE9BQU95SyxHQUMzQ0gsRUFBVzFKLEdBQU02SixFQUFRLEVBQ3pCLElBQUlDLEVBQW9CUixFQUFxQkMsR0FDekNRLEVBQU0sQ0FDUkMsSUFBSy9LLEVBQUssR0FDVlEsTUFBT1IsRUFBSyxHQUNaZ0wsVUFBV2hMLEVBQUssR0FDaEJVLFNBQVVWLEVBQUssR0FDZlcsTUFBT1gsRUFBSyxJQUVkLElBQTJCLElBQXZCNkssRUFDRlQsRUFBWVMsR0FBbUJJLGFBQy9CYixFQUFZUyxHQUFtQkssUUFBUUosT0FDbEMsQ0FDTCxJQUFJSSxFQUFVQyxFQUFnQkwsRUFBSy9CLEdBQ25DQSxFQUFRcUMsUUFBVTlLLEVBQ2xCOEosRUFBWWlCLE9BQU8vSyxFQUFHLEVBQUcsQ0FDdkJnSyxXQUFZQSxFQUNaWSxRQUFTQSxFQUNURCxXQUFZLEdBRWhCLENBQ0FQLEVBQVl6SixLQUFLcUosRUFDbkIsQ0FDQSxPQUFPSSxDQUNULENBQ0EsU0FBU1MsRUFBZ0JMLEVBQUsvQixHQUM1QixJQUFJdUMsRUFBTXZDLEVBQVFJLE9BQU9KLEdBWXpCLE9BWEF1QyxFQUFJQyxPQUFPVCxHQUNHLFNBQWlCVSxHQUM3QixHQUFJQSxFQUFRLENBQ1YsR0FBSUEsRUFBT1QsTUFBUUQsRUFBSUMsS0FBT1MsRUFBT2hMLFFBQVVzSyxFQUFJdEssT0FBU2dMLEVBQU9SLFlBQWNGLEVBQUlFLFdBQWFRLEVBQU85SyxXQUFhb0ssRUFBSXBLLFVBQVk4SyxFQUFPN0ssUUFBVW1LLEVBQUluSyxNQUN6SixPQUVGMkssRUFBSUMsT0FBT1QsRUFBTVUsRUFDbkIsTUFDRUYsRUFBSTNJLFFBRVIsQ0FFRixDQUNBbEQsRUFBT0MsUUFBVSxTQUFVRSxFQUFNbUosR0FHL0IsSUFBSTBDLEVBQWtCakIsRUFEdEI1SyxFQUFPQSxHQUFRLEdBRGZtSixFQUFVQSxHQUFXLENBQUMsR0FHdEIsT0FBTyxTQUFnQjJDLEdBQ3JCQSxFQUFVQSxHQUFXLEdBQ3JCLElBQUssSUFBSXBMLEVBQUksRUFBR0EsRUFBSW1MLEVBQWdCckwsT0FBUUUsSUFBSyxDQUMvQyxJQUNJcUwsRUFBUXRCLEVBREtvQixFQUFnQm5MLElBRWpDOEosRUFBWXVCLEdBQU9WLFlBQ3JCLENBRUEsSUFEQSxJQUFJVyxFQUFxQnBCLEVBQWFrQixFQUFTM0MsR0FDdEM4QyxFQUFLLEVBQUdBLEVBQUtKLEVBQWdCckwsT0FBUXlMLElBQU0sQ0FDbEQsSUFDSUMsRUFBU3pCLEVBREtvQixFQUFnQkksSUFFSyxJQUFuQ3pCLEVBQVkwQixHQUFRYixhQUN0QmIsRUFBWTBCLEdBQVFaLFVBQ3BCZCxFQUFZaUIsT0FBT1MsRUFBUSxHQUUvQixDQUNBTCxFQUFrQkcsQ0FDcEIsQ0FDRixDLFVDakZBLElBQUlHLEVBQU8sQ0FBQyxFQStCWnRNLEVBQU9DLFFBUFAsU0FBMEJ3SixFQUFROEMsR0FDaEMsSUFBSUMsRUF0Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCRixFQUFLRSxHQUF5QixDQUN2QyxJQUFJQyxFQUFjckssU0FBU3NLLGNBQWNGLEdBR3pDLEdBQUlHLE9BQU9DLG1CQUFxQkgsYUFBdUJFLE9BQU9DLGtCQUM1RCxJQUdFSCxFQUFjQSxFQUFZSSxnQkFBZ0JDLElBQzVDLENBQUUsTUFBTzVDLEdBRVB1QyxFQUFjLElBQ2hCLENBRUZILEVBQUtFLEdBQVVDLENBQ2pCLENBQ0EsT0FBT0gsRUFBS0UsRUFDZCxDQUllTyxDQUFVdEQsR0FDdkIsSUFBSytDLEVBQ0gsTUFBTSxJQUFJUSxNQUFNLDJHQUVsQlIsRUFBT2hLLFlBQVkrSixFQUNyQixDLFVDdkJBdk0sRUFBT0MsUUFOUCxTQUE0QnFKLEdBQzFCLElBQUkyRCxFQUFVN0ssU0FBU0MsY0FBYyxTQUdyQyxPQUZBaUgsRUFBUUUsY0FBY3lELEVBQVMzRCxFQUFRNEQsWUFDdkM1RCxFQUFRRyxPQUFPd0QsRUFBUzNELEVBQVFBLFNBQ3pCMkQsQ0FDVCxDLGVDQ0FqTixFQUFPQyxRQU5QLFNBQXdDa04sR0FDdEMsSUFBSUMsRUFBbUQsS0FDbkRBLEdBQ0ZELEVBQWFFLGFBQWEsUUFBU0QsRUFFdkMsQyxVQ29EQXBOLEVBQU9DLFFBakJQLFNBQWdCcUosR0FDZCxHQUF3QixvQkFBYmxILFNBQ1QsTUFBTyxDQUNMMEosT0FBUSxXQUFtQixFQUMzQjVJLE9BQVEsV0FBbUIsR0FHL0IsSUFBSWlLLEVBQWU3RCxFQUFRSyxtQkFBbUJMLEdBQzlDLE1BQU8sQ0FDTHdDLE9BQVEsU0FBZ0JULElBakQ1QixTQUFlOEIsRUFBYzdELEVBQVMrQixHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUlwSyxXQUNOcUssR0FBTyxjQUFjNUssT0FBTzJLLEVBQUlwSyxTQUFVLFFBRXhDb0ssRUFBSXRLLFFBQ051SyxHQUFPLFVBQVU1SyxPQUFPMkssRUFBSXRLLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZDRLLEVBQUluSyxNQUN2QlQsSUFDRjZLLEdBQU8sU0FBUzVLLE9BQU8ySyxFQUFJbkssTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU8ySyxFQUFJbkssT0FBUyxHQUFJLE9BRTVFb0ssR0FBT0QsRUFBSUMsSUFDUDdLLElBQ0Y2SyxHQUFPLEtBRUxELEVBQUl0SyxRQUNOdUssR0FBTyxLQUVMRCxFQUFJcEssV0FDTnFLLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVQ3SixPQUN0QjRKLEdBQU8sdURBQXVENUssT0FBT2dCLEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVXdKLE1BQWUsUUFLdElqQyxFQUFRQyxrQkFBa0IrQixFQUFLNkIsRUFBYzdELEVBQVFBLFFBQ3ZELENBb0JNZ0UsQ0FBTUgsRUFBYzdELEVBQVMrQixFQUMvQixFQUNBbkksT0FBUSxZQXJCWixTQUE0QmlLLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhSSxXQUNmLE9BQU8sRUFFVEosRUFBYUksV0FBV0MsWUFBWUwsRUFDdEMsQ0FnQk1NLENBQW1CTixFQUNyQixFQUVKLEMsVUM5Q0FuTixFQUFPQyxRQVZQLFNBQTJCcUwsRUFBSzZCLEdBQzlCLEdBQUlBLEVBQWFPLFdBQ2ZQLEVBQWFPLFdBQVdDLFFBQVVyQyxNQUM3QixDQUNMLEtBQU82QixFQUFhUyxZQUNsQlQsRUFBYUssWUFBWUwsRUFBYVMsWUFFeENULEVBQWEzSyxZQUFZSixTQUFTeUwsZUFBZXZDLEdBQ25ELENBQ0YsQyIsInNvdXJjZXMiOlsid2VicGFjazovL25hbm8tbW9kdWxlcy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vc3JjL2FwcC9OYW5vRE9NLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9jb21wb25lbnRzL01vZHVsZS5qcyIsIndlYnBhY2s6Ly9uYW5vLW1vZHVsZXMvLi9zcmMvY29tcG9uZW50cy9Nb2R1bGVzLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9hcHAvTmFub091dHB1dC5qcyIsIndlYnBhY2s6Ly9uYW5vLW1vZHVsZXMvLi9zcmMvYXBwL05hbm9Nb2R1bGVzLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9hcHAvTmFub01haWwuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vc3JjL2NvbXBvbmVudHMvRm9vdGVyLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9jb21wb25lbnRzL0hlYWRlci5qcyIsIndlYnBhY2s6Ly9uYW5vLW1vZHVsZXMvLi9zcmMvbmFuby1tb2R1bGVzLmNzcz8zMDFkIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9uYW5vLW1vZHVsZXMuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vc3JjL2NvbXBvbmVudHMvQXBwQ29udGFpbmVyLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL3NyYy9uYW5vLW1vZHVsZXMuY3NzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9uYW5vLW1vZHVsZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL25hbm8tbW9kdWxlcy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9uYW5vLW1vZHVsZXMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vbmFuby1tb2R1bGVzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hbm9ET00ge1xuICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBjb25zdHJ1Y3Rvcih0YWcpIHtcbiAgICBpZiAodGFnKSB7XG4gICAgICB0aGlzLm5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IG5vZGUoKSB7XG4gICAgcmV0dXJuIHRoaXMubm9kZTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm5vZGU7XG4gIH1cblxuICBhcHBlbmRDaGlsZChjaGlsZCkge1xuICAgIHRoaXMubm9kZS5hcHBlbmRDaGlsZChjaGlsZCk7XG4gIH1cblxuICBzZXRJZChpZCkge1xuICAgIGlmIChpZCkge1xuICAgICAgdGhpcy5ub2RlLmlkID0gaWQ7XG4gICAgfVxuICB9XG5cbiAgc2V0SW5uZXJIVE1MKGlubmVySFRNTCkge1xuICAgIGlmIChpbm5lckhUTUwpIHtcbiAgICAgIHRoaXMubm9kZS5pbm5lckhUTUwgPSBpbm5lckhUTUw7XG4gICAgfVxuICB9XG5cbiAgYWRkQ2xhc3MoY2xhc3NOYW1lKSB7XG4gICAgaWYgKGNsYXNzTmFtZSkge1xuICAgICAgdGhpcy5ub2RlLmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVDbGFzcyhjbGFzc05hbWUpIHtcbiAgICBpZiAoY2xhc3NOYW1lKSB7XG4gICAgICB0aGlzLm5vZGUuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IE5hbm9ET00gZnJvbSBcIi4uL2FwcC9OYW5vRE9NXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZHVsZSBleHRlbmRzIE5hbm9ET00ge1xuICAjbW9kaWQgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKG1vZGlkKSB7XG4gICAgc3VwZXIoKTtcbiAgICBpZiAobW9kaWQgIT09IG51bGwpIHRoaXMuI21vZGlkID0gbW9kaWQ7XG4gIH1cblxuICBnZXRNb2R1bGVUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBtb2R1bGVDb250YWluZXIgPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBtb2R1bGVDb250YWluZXIuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZXNfbW9kdWxlXCIpO1xuICAgIG1vZHVsZUNvbnRhaW5lci5zZXRJZChgbmFub19tb2R1bGVfJHt0aGlzLiNtb2RpZH1gKTtcbiAgICBjb25zdCBtb2R1bGVOYW1lID0gdGhpcy5nZXRNb2R1bGVOYW1lVGVtcGxhdGUoKTtcbiAgICBtb2R1bGVDb250YWluZXIuYXBwZW5kQ2hpbGQobW9kdWxlTmFtZSk7XG4gICAgY29uc3QgbW9kdWxlRGVzY3JpcHRpb24gPSB0aGlzLmdldE1vZHVsZURlc2NyaXB0aW9uVGVtcGxhdGUoKTtcbiAgICBtb2R1bGVDb250YWluZXIuYXBwZW5kQ2hpbGQobW9kdWxlRGVzY3JpcHRpb24pO1xuICAgIGNvbnN0IG1vZHVsZU91dHB1dExhYmVsUm93ID0gdGhpcy5nZXRNb2R1bGVPdXRwdXRMYWJlbFJvd1RlbXBsYXRlKCk7XG4gICAgbW9kdWxlQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vZHVsZU91dHB1dExhYmVsUm93KTtcbiAgICBjb25zdCBtb2R1bGVPdXRwdXQgPSB0aGlzLmdldE1vZHVsZU91dHB1dFRlbXBsYXRlKCk7XG4gICAgbW9kdWxlQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vZHVsZU91dHB1dCk7XG4gICAgcmV0dXJuIG1vZHVsZUNvbnRhaW5lci5ub2RlO1xuICB9XG5cbiAgZ2V0TW9kdWxlTmFtZVRlbXBsYXRlKCkge1xuICAgIGNvbnN0IG1vZHVsZU5hbWUgPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBtb2R1bGVOYW1lLmFkZENsYXNzKFwibmFub19tb2R1bGVfbmFtZVwiKTtcbiAgICBjb25zdCBib2xkTGFiZWwgPSBuZXcgTmFub0RPTShcImJcIik7XG4gICAgYm9sZExhYmVsLnNldElubmVySFRNTChcIk5hbWU6IFwiKTtcbiAgICBjb25zdCB2YWx1ZSA9IG5ldyBOYW5vRE9NKFwic3BhblwiKTtcbiAgICB2YWx1ZS5zZXRJZChgbmFub19tb2R1bGVfJHt0aGlzLiNtb2RpZH1fbmFtZWApO1xuICAgIG1vZHVsZU5hbWUuYXBwZW5kQ2hpbGQoYm9sZExhYmVsLm5vZGUpO1xuICAgIG1vZHVsZU5hbWUuYXBwZW5kQ2hpbGQodmFsdWUubm9kZSk7XG4gICAgcmV0dXJuIG1vZHVsZU5hbWUubm9kZTtcbiAgfVxuXG4gIGdldE1vZHVsZURlc2NyaXB0aW9uVGVtcGxhdGUoKSB7XG4gICAgY29uc3QgbW9kdWxlRGVzY3JpcHRpb24gPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBtb2R1bGVEZXNjcmlwdGlvbi5hZGRDbGFzcyhcIm5hbm9fbW9kdWxlX2Rlc2NyaXB0aW9uXCIpO1xuICAgIGNvbnN0IGJvbGRMYWJlbCA9IG5ldyBOYW5vRE9NKFwiYlwiKTtcbiAgICBib2xkTGFiZWwuc2V0SW5uZXJIVE1MKFwiRGVzY3JpcHRpb246IFwiKTtcbiAgICBjb25zdCB2YWx1ZSA9IG5ldyBOYW5vRE9NKFwic3BhblwiKTtcbiAgICB2YWx1ZS5zZXRJZChgbmFub19tb2R1bGVfJHt0aGlzLiNtb2RpZH1fZGVzY3JpcHRpb25gKTtcbiAgICBtb2R1bGVEZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChib2xkTGFiZWwubm9kZSk7XG4gICAgbW9kdWxlRGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQodmFsdWUubm9kZSk7XG4gICAgcmV0dXJuIG1vZHVsZURlc2NyaXB0aW9uLm5vZGU7XG4gIH1cblxuICBnZXRNb2R1bGVPdXRwdXRMYWJlbFJvd1RlbXBsYXRlKCkge1xuICAgIGNvbnN0IG1vZHVsZU91dHB1dExhYmVsUm93ID0gbmV3IE5hbm9ET00oXCJkaXZcIik7XG4gICAgbW9kdWxlT3V0cHV0TGFiZWxSb3cuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZV9vdXRwdXRcIik7XG4gICAgY29uc3QgYm9sZExhYmVsID0gbmV3IE5hbm9ET00oXCJiXCIpO1xuICAgIGJvbGRMYWJlbC5zZXRJbm5lckhUTUwoXCJPdXRwdXQ6IFwiKTtcbiAgICBtb2R1bGVPdXRwdXRMYWJlbFJvdy5hcHBlbmRDaGlsZChib2xkTGFiZWwubm9kZSk7XG4gICAgY29uc3QgcHVsc2UgPSBuZXcgTmFub0RPTShcInNwYW5cIik7XG4gICAgcHVsc2Uuc2V0SWQoYG5hbm9fbW9kdWxlXyR7dGhpcy4jbW9kaWR9X3B1bHNlYCk7XG4gICAgcHVsc2UuYWRkQ2xhc3MoXCJwdWxzZVwiKTtcbiAgICBwdWxzZS5hZGRDbGFzcyhcImhpZGRlblwiKTtcbiAgICBjb25zdCBwdWxzZURvdCA9IG5ldyBOYW5vRE9NKFwic3BhblwiKTtcbiAgICBwdWxzZURvdC5hZGRDbGFzcyhcInB1bHNlX2RvdFwiKTtcbiAgICBwdWxzZS5hcHBlbmRDaGlsZChwdWxzZURvdC5ub2RlKTtcbiAgICBtb2R1bGVPdXRwdXRMYWJlbFJvdy5hcHBlbmRDaGlsZChwdWxzZS5ub2RlKTtcbiAgICBjb25zdCBleHBhbmRlciA9IG5ldyBOYW5vRE9NKFwic3BhblwiKTtcbiAgICBleHBhbmRlci5hZGRDbGFzcyhcImV4cGFuZGVyXCIpO1xuICAgIG1vZHVsZU91dHB1dExhYmVsUm93LmFwcGVuZENoaWxkKGV4cGFuZGVyLm5vZGUpO1xuICAgIGNvbnN0IHZlcnNpb25MYWJlbCA9IG5ldyBOYW5vRE9NKFwiYlwiKTtcbiAgICB2ZXJzaW9uTGFiZWwuc2V0SW5uZXJIVE1MKFwidlwiKTtcbiAgICBtb2R1bGVPdXRwdXRMYWJlbFJvdy5hcHBlbmRDaGlsZCh2ZXJzaW9uTGFiZWwubm9kZSk7XG4gICAgY29uc3QgdmVyc2lvbiA9IG5ldyBOYW5vRE9NKFwic3BhblwiKTtcbiAgICB2ZXJzaW9uLnNldElkKGBuYW5vX21vZHVsZV8ke3RoaXMuI21vZGlkfV92ZXJzaW9uYCk7XG4gICAgbW9kdWxlT3V0cHV0TGFiZWxSb3cuYXBwZW5kQ2hpbGQodmVyc2lvbi5ub2RlKTtcbiAgICByZXR1cm4gbW9kdWxlT3V0cHV0TGFiZWxSb3cubm9kZTtcbiAgfVxuXG4gIGdldE1vZHVsZU91dHB1dFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IG1vZHVsZU91dHB1dENvbnRhaW5lciA9IG5ldyBOYW5vRE9NKFwiZGl2XCIpO1xuICAgIG1vZHVsZU91dHB1dENvbnRhaW5lci5hZGRDbGFzcyhcIm5hbm9fbW9kdWxlX291dHB1dF9jb250YWluZXJcIik7XG4gICAgY29uc3QgbW9kdWxlT3V0cHV0ID0gbmV3IE5hbm9ET00oXCJkaXZcIik7XG4gICAgbW9kdWxlT3V0cHV0LmFkZENsYXNzKFwibmFub19tb2R1bGVfb3V0cHV0X3Jlc3RyaWN0ZWRfc2Nyb2xsYWJsZVwiKTtcbiAgICBtb2R1bGVPdXRwdXQuc2V0SWQoYG5hbm9fbW9kdWxlXyR7dGhpcy4jbW9kaWR9X291dHB1dGApO1xuICAgIG1vZHVsZU91dHB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChtb2R1bGVPdXRwdXQubm9kZSk7XG4gICAgcmV0dXJuIG1vZHVsZU91dHB1dENvbnRhaW5lci5ub2RlO1xuICB9XG5cbiAgI3VwZGF0ZVZhbHVlKGVsZW1JZCwgdmFsdWUpIHtcbiAgICBpZiAoZWxlbUlkKSB7XG4gICAgICBjb25zdCBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWxlbUlkKTtcbiAgICAgIGlmIChlbGVtKSBlbGVtLmlubmVySFRNTCA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZU5hbWUobmFtZSkge1xuICAgIGlmIChuYW1lKSB7XG4gICAgICB0aGlzLiN1cGRhdGVWYWx1ZShgbmFub19tb2R1bGVfJHt0aGlzLiNtb2RpZH1fbmFtZWAsIG5hbWUpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZURlc2NyaXB0aW9uKGRlc2NyaXB0aW9uKSB7XG4gICAgaWYgKGRlc2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLiN1cGRhdGVWYWx1ZShgbmFub19tb2R1bGVfJHt0aGlzLiNtb2RpZH1fZGVzY3JpcHRpb25gLCBkZXNjcmlwdGlvbik7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlVmVyc2lvbih2ZXJzaW9uKSB7XG4gICAgaWYgKHZlcnNpb24pIHtcbiAgICAgIHRoaXMuI3VwZGF0ZVZhbHVlKGBuYW5vX21vZHVsZV8ke3RoaXMuI21vZGlkfV92ZXJzaW9uYCwgdmVyc2lvbik7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlT3V0cHV0KG91dHB1dCkge1xuICAgIGlmIChvdXRwdXQgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuI3VwZGF0ZVZhbHVlKGBuYW5vX21vZHVsZV8ke3RoaXMuI21vZGlkfV9vdXRwdXRgLCBvdXRwdXQpO1xuICAgIH1cbiAgfVxuXG4gIGVuYWJsZVB1bHNlKCkge1xuICAgIGRvY3VtZW50XG4gICAgICAuZ2V0RWxlbWVudEJ5SWQoYG5hbm9fbW9kdWxlXyR7dGhpcy4jbW9kaWR9X3B1bHNlYClcbiAgICAgIC5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICB9XG59XG4iLCJpbXBvcnQgTmFub0RPTSBmcm9tIFwiLi4vYXBwL05hbm9ET01cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kdWxlcyBleHRlbmRzIE5hbm9ET00ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZXNfbW9kdWxlc1wiKTtcbiAgICB0aGlzLnNldElkKFwibmFub19tb2R1bGVzX21vZHVsZXNcIik7XG4gIH1cblxuICBpbnNlcnRNb2R1bGVUZW1wbGF0ZShtb2R1bGVUZW1wbGF0ZSkge1xuICAgIGlmIChtb2R1bGVUZW1wbGF0ZSkge1xuICAgICAgY29uc3QgbW9kdWxlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmFub19tb2R1bGVzX21vZHVsZXNcIik7XG4gICAgICBtb2R1bGVzLmFwcGVuZENoaWxkKG1vZHVsZVRlbXBsYXRlKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hbm9PdXRwdXQge1xuICAjbW9kaWQgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKG1vZGlkKSB7XG4gICAgaWYgKG1vZGlkICE9PSBudWxsKSB0aGlzLiNtb2RpZCA9IG1vZGlkO1xuICB9XG5cbiAgI2dldE91dHB1dENvbnRhaW5lcigpIHtcbiAgICBjb25zdCBvdXRwdXRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcbiAgICAgIGBuYW5vX21vZHVsZV8ke3RoaXMuI21vZGlkfV9vdXRwdXRgXG4gICAgKTtcbiAgICByZXR1cm4gb3V0cHV0Q29udGFpbmVyO1xuICB9XG5cbiAgcHJpbnQobmV3T3V0cHV0KSB7XG4gICAgY29uc3QgY29udGFpbmVyID0gdGhpcy4jZ2V0T3V0cHV0Q29udGFpbmVyKCk7XG4gICAgY29udGFpbmVyLmlubmVySFRNTCA9IG5ld091dHB1dDtcbiAgfVxuXG4gIHByaW50TGluZShuZXdPdXRwdXQpIHtcbiAgICBjb25zdCBvdXRwdXRDb250YWluZXIgPSB0aGlzLiNnZXRPdXRwdXRDb250YWluZXIoKTtcbiAgICBpZiAob3V0cHV0Q29udGFpbmVyLmlubmVyVGV4dCA9PT0gXCIuLi5cIikgdGhpcy5wcmludChcIlwiKTtcbiAgICBvdXRwdXRDb250YWluZXIucHJlcGVuZChuZXdPdXRwdXQsIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJiclwiKSk7XG4gIH1cbn1cbiIsImltcG9ydCBNb2R1bGUgZnJvbSBcIi4uL2NvbXBvbmVudHMvTW9kdWxlXCI7XG5pbXBvcnQgTW9kdWxlcyBmcm9tIFwiLi4vY29tcG9uZW50cy9Nb2R1bGVzXCI7XG5pbXBvcnQgTmFub01haWwgZnJvbSBcIi4vTmFub01haWxcIjtcbmltcG9ydCBOYW5vT3V0cHV0IGZyb20gXCIuL05hbm9PdXRwdXRcIjtcblxuY29uc3QgTkFOT01PRFVMRVNfVVJMX0RFViA9IFwiLi4vbmFub19tb2R1bGVzL1wiO1xuY29uc3QgTkFOT01PRFVMRVNfVVJMX1BST0QgPSBcImh0dHBzOi8vTTlKLmdpdGh1Yi5pby9uYW5vX21vZHVsZXMvXCI7XG5jb25zdCBNRVRBTU9EVUxFUyA9IFtdO1xuY29uc3QgTkFOT01BSUwgPSBuZXcgTmFub01haWwoKTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZyhcIj4gTmFub21vZC5qcyBfXCIpO1xuICBjb25zdCBOYW5vTW9kdWxlc0luZGV4ID0gYXdhaXQgZmV0Y2hOYW5vTW9kdWxlcygpO1xuICBpZiAoTmFub01vZHVsZXNJbmRleCkge1xuICAgIGNvbnN0IG5hbm9Nb2R1bGVzTW9kdWxlQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICBcIm5hbm9fbW9kdWxlc19tb2R1bGVzXCJcbiAgICApO1xuICAgIGlmIChOYW5vTW9kdWxlc0luZGV4Lmxlbmd0aCA+IDApIG5hbm9Nb2R1bGVzTW9kdWxlQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gICAgZWxzZVxuICAgICAgbmFub01vZHVsZXNNb2R1bGVDb250YWluZXIuaW5uZXJIVE1MID1cbiAgICAgICAgXCI8ZGl2IGNsYXNzPSduYW5vX21vZHVsZXNfbm9fbW9kdWxlcyc+Tm8gTW9kdWxlcyBmb3VuZDwvZGl2PlwiO1xuICAgIGZvciAoY29uc3QgW21vZGlkLCBuYW5vTW9kdWxlUGF0aF0gb2YgTmFub01vZHVsZXNJbmRleC5lbnRyaWVzKCkpIHtcbiAgICAgIGlmIChuYW5vTW9kdWxlUGF0aCkgYXdhaXQgc2V0dXBNZXRhTW9kdWxlKG1vZGlkLCBuYW5vTW9kdWxlUGF0aCk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgbW9kdWxlIG9mIE1FVEFNT0RVTEVTKSB7XG4gICAgICBpZiAobW9kdWxlKSBhd2FpdCBleGVjTW9kdWxlKG1vZHVsZSk7XG4gICAgfVxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGZldGNoTmFub01vZHVsZXMoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgaW1wb3J0ZWRNb2R1bGUgPSBhd2FpdCBnZXROYW5vTW9kdWxlSW5kZXgoKTtcbiAgICBpZiAoaW1wb3J0ZWRNb2R1bGUpIHJldHVybiBpbXBvcnRlZE1vZHVsZS5NT0RVTEVTO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc3QgeyBjb2RlLCBtZXNzYWdlIH0gPSBlO1xuICAgIGNvbnNvbGUubG9nKGAke2NvZGV9OiAke21lc3NhZ2V9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0TmFub01vZHVsZUluZGV4KCkge1xuICB0cnkge1xuICAgIGxldCBjdXJyZW50VVJMID0gZ2V0TmFub01vZHVsZXNVUkwoKTtcbiAgICBjdXJyZW50VVJMICs9IFwiaW5kZXguanNcIjtcbiAgICByZXR1cm4gYXdhaXQgZmV0Y2hGaWxlKGN1cnJlbnRVUkwpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hGaWxlKHBhdGgpIHtcbiAgcmV0dXJuIGF3YWl0IGltcG9ydChcbiAgICAvKiB3ZWJwYWNrSWdub3JlOiB0cnVlICovXG4gICAgcGF0aFxuICApO1xufVxuXG5mdW5jdGlvbiBnZXROYW5vTW9kdWxlc1VSTCgpIHtcbiAgY29uc3QgSVNfUFJPRFVDVElPTiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIjtcbiAgaWYgKElTX1BST0RVQ1RJT04pIHJldHVybiBOQU5PTU9EVUxFU19VUkxfUFJPRDtcbiAgZWxzZSByZXR1cm4gTkFOT01PRFVMRVNfVVJMX0RFVjtcbn1cblxuYXN5bmMgZnVuY3Rpb24gc2V0dXBNZXRhTW9kdWxlKG1vZGlkLCBtb2R1bGVQYXRoKSB7XG4gIGxldCBtb2R1bGVOYW1lID0gbW9kdWxlUGF0aDtcbiAgbGV0IG1vZHVsZURlc2NyaXB0aW9uID0gXCIuLi5cIjtcbiAgbGV0IG1vZHVsZVZlcnNpb24gPSBcIi4uLlwiO1xuICBsZXQgbW9kdWxlT3V0cHV0ID0gXCIuLi5cIjtcbiAgY29uc3QgbW9kdWxlID0gbmV3IE1vZHVsZShtb2RpZCk7XG4gIG5ldyBNb2R1bGVzKCkuaW5zZXJ0TW9kdWxlVGVtcGxhdGUobW9kdWxlLmdldE1vZHVsZVRlbXBsYXRlKCkpO1xuICBtb2R1bGUudXBkYXRlTmFtZShtb2R1bGVOYW1lKTtcbiAgbW9kdWxlLnVwZGF0ZURlc2NyaXB0aW9uKG1vZHVsZURlc2NyaXB0aW9uKTtcbiAgbW9kdWxlLnVwZGF0ZVZlcnNpb24obW9kdWxlVmVyc2lvbik7XG4gIG1vZHVsZS51cGRhdGVPdXRwdXQobW9kdWxlT3V0cHV0KTtcbiAgY29uc3QgYWN0dWFsUGF0aCA9IGdldE5hbm9Nb2R1bGVzVVJMKCkgKyBtb2R1bGVQYXRoLnN1YnN0cmluZygyKTtcbiAgY29uc3QgaW1wb3J0ZWRNb2R1bGUgPSBhd2FpdCBhd2FpdCBmZXRjaEZpbGUoYWN0dWFsUGF0aCk7XG4gIGNvbnN0IGluc3RhbmNlID0gbmV3IGltcG9ydGVkTW9kdWxlLmRlZmF1bHQoKTtcbiAgbW9kdWxlTmFtZSA9IGluc3RhbmNlLk1PRFVMRV9OQU1FID8gaW5zdGFuY2UuTU9EVUxFX05BTUUgOiBcIi1cIjtcbiAgbW9kdWxlRGVzY3JpcHRpb24gPSBpbnN0YW5jZS5NT0RVTEVfREVTQ1JJUFRJT05cbiAgICA/IGluc3RhbmNlLk1PRFVMRV9ERVNDUklQVElPTlxuICAgIDogXCItXCI7XG4gIG1vZHVsZVZlcnNpb24gPSBpbnN0YW5jZS5NT0RVTEVfVkVSU0lPTiA/IGluc3RhbmNlLk1PRFVMRV9WRVJTSU9OIDogXCItXCI7XG4gIGNvbnN0IG1vZHVsZU1haWxJZCA9IGluc3RhbmNlLk1PRFVMRV9NQUlMX0lEIHx8IG51bGw7XG4gIGNvbnN0IG1vZHVsZU1haWxIYW5kbGVyID0gaW5zdGFuY2UuTU9EVUxFX01BSUxfSEFORExFUiB8fCBudWxsO1xuICBpbnN0YW5jZS5NT0RVTEVfT1VUUFVUID0gbmV3IE5hbm9PdXRwdXQobW9kaWQpO1xuICBpZiAobW9kdWxlTWFpbElkKSBpbnN0YW5jZS5NT0RVTEVfTUFJTCA9IHsgc2VuZDogKG0pID0+IE5BTk9NQUlMLnNlbmQobSkgfTtcbiAgaWYgKG1vZHVsZU1haWxJZCAmJiBtb2R1bGVNYWlsSGFuZGxlcikge1xuICAgIE5BTk9NQUlMLm9uUmVjZWl2ZShtb2R1bGVNYWlsSWQsIG1vZHVsZU1haWxIYW5kbGVyKTtcbiAgfVxuICBtb2R1bGUudXBkYXRlTmFtZShtb2R1bGVOYW1lKTtcbiAgbW9kdWxlLnVwZGF0ZURlc2NyaXB0aW9uKG1vZHVsZURlc2NyaXB0aW9uKTtcbiAgbW9kdWxlLnVwZGF0ZVZlcnNpb24obW9kdWxlVmVyc2lvbik7XG4gIGluc3RhbmNlLk1PRFVMRV9JRCA9IG1vZGlkO1xuICBNRVRBTU9EVUxFUy5wdXNoKGluc3RhbmNlKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZXhlY01vZHVsZShpbnN0YW5jZSkge1xuICBjb25zdCBoYXNQdWxzZSA9IGluc3RhbmNlLk1PRFVMRV9QVUxTRSB8fCBmYWxzZTtcbiAgaWYgKGhhc1B1bHNlKSB7XG4gICAgY29uc3QgbW9kdWxlID0gbmV3IE1vZHVsZShpbnN0YW5jZS5NT0RVTEVfSUQpO1xuICAgIG1vZHVsZS5lbmFibGVQdWxzZSgpO1xuICB9XG4gIGlmIChpbnN0YW5jZS5NT0RVTEVfTUFJTiAmJiB0eXBlb2YgaW5zdGFuY2UuTU9EVUxFX01BSU4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBpbnN0YW5jZS5NT0RVTEVfTUFJTigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBpbnN0YW5jZS5NT0RVTEVfT1VUUFVULnByaW50KGBFUlJPUjogJHtlcnJvci5jb2RlfTogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH1cbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmFub01haWwge1xuICBNQUlMX1NFTkRfREVMQVkgPSAwO1xuICBSRUNJUElFTlRTID0ge307XG5cbiAgY29uc3RydWN0b3IoZGVsYXkgPSAwKSB7XG4gICAgaWYgKGRlbGF5KSB0aGlzLk1BSUxfU0VORF9ERUxBWSA9IGRlbGF5O1xuICB9XG5cbiAgb25SZWNlaXZlKG1haWxJZCwgbWFpbEhhbmRsZXIpIHtcbiAgICBpZiAoIXRoaXMuUkVDSVBJRU5UU1ttYWlsSWRdKSB0aGlzLlJFQ0lQSUVOVFNbbWFpbElkXSA9IG1haWxIYW5kbGVyO1xuICB9XG5cbiAgc2VuZChtYWlsKSB7XG4gICAgbGV0IHRtciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRtcik7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShtYWlsLnRvKSkge1xuICAgICAgICBmb3IgKGNvbnN0IGJyb2FkY2FzdFRvIG9mIG1haWwudG8pIHtcbiAgICAgICAgICBpZiAoIXRoaXMuUkVDSVBJRU5UU1ticm9hZGNhc3RUb10pXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgUmVjaXBpZW50IG5vdCBmb3VuZDogJHticm9hZGNhc3RUb31gKTtcbiAgICAgICAgICBlbHNlIHRoaXMuUkVDSVBJRU5UU1ticm9hZGNhc3RUb10obWFpbCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdGhpcy5SRUNJUElFTlRTW21haWwudG9dKVxuICAgICAgICAgIGNvbnNvbGUubG9nKGBSZWNpcGllbnQgbm90IGZvdW5kOiAke21haWwudG99YCk7XG4gICAgICAgIGVsc2UgdGhpcy5SRUNJUElFTlRTW21haWwudG9dKG1haWwpO1xuICAgICAgfVxuICAgIH0sIHRoaXMuTUFJTF9TRU5EX0RFTEFZKTtcbiAgfVxufVxuIiwiaW1wb3J0IE5hbm9ET00gZnJvbSBcIi4uL2FwcC9OYW5vRE9NXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvb3RlciBleHRlbmRzIE5hbm9ET00ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZXNfZm9vdGVyXCIpO1xuICAgIGNvbnN0IGZvb3RlclJvdzEgPSB0aGlzLmZvb3RlclJvdzEoKTtcbiAgICBjb25zdCBmb290ZXJSb3cyID0gdGhpcy5mb290ZXJSb3cyKCk7XG4gICAgdGhpcy5hcHBlbmRDaGlsZChmb290ZXJSb3cxLm5vZGUpO1xuICAgIHRoaXMuYXBwZW5kQ2hpbGQoZm9vdGVyUm93Mi5ub2RlKTtcbiAgICByZXR1cm4gdGhpcy5ub2RlO1xuICB9XG5cbiAgZm9vdGVyUm93MSgpIHtcbiAgICBjb25zdCBub2RlID0gbmV3IE5hbm9ET00oXCJkaXZcIik7XG4gICAgbm9kZS5hZGRDbGFzcyhcIm5hbm9fbW9kdWxlc19mb290ZXJfcm93XCIpO1xuICAgIGNvbnN0IGxpbmsgPSBuZXcgTmFub0RPTShcImFcIik7XG4gICAgbGluay5hZGRDbGFzcyhcImdpdGh1Yi1iYWRnZVwiKTtcbiAgICBsaW5rLm5vZGUuaHJlZiA9IFwiaHR0cHM6Ly9naXRodWIuY29tL205ai9uYW5vLW1vZHVsZXMvYWN0aW9uc1wiO1xuICAgIGNvbnN0IGdpdGh1YkJhZGdlTGFiZWwgPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBnaXRodWJCYWRnZUxhYmVsLmFkZENsYXNzKFwiZ2l0aHViLWJhZGdlLWxhYmVsXCIpO1xuICAgIGdpdGh1YkJhZGdlTGFiZWwuc2V0SW5uZXJIVE1MKFwibmFuby1tb2R1bGVzXCIpO1xuICAgIGNvbnN0IGdpdGh1YkJhZGdlU3RhdHVzID0gbmV3IE5hbm9ET00oXCJkaXZcIik7XG4gICAgZ2l0aHViQmFkZ2VTdGF0dXMuYWRkQ2xhc3MoXCJnaXRodWItYmFkZ2Utc3RhZ2VcIik7XG4gICAgZ2l0aHViQmFkZ2VTdGF0dXMuc2V0SW5uZXJIVE1MKFwiQUNUSU9OU1wiKTtcbiAgICBsaW5rLmFwcGVuZENoaWxkKGdpdGh1YkJhZGdlTGFiZWwubm9kZSk7XG4gICAgbGluay5hcHBlbmRDaGlsZChnaXRodWJCYWRnZVN0YXR1cy5ub2RlKTtcbiAgICBub2RlLmFwcGVuZENoaWxkKGxpbmsubm9kZSk7XG4gICAgcmV0dXJuIG5vZGU7XG4gIH1cblxuICBmb290ZXJSb3cyKCkge1xuICAgIGNvbnN0IG5vZGUgPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBub2RlLmFkZENsYXNzKFwibmFub19tb2R1bGVzX2Zvb3Rlcl9yb3dcIik7XG4gICAgY29uc3QgbGluayA9IG5ldyBOYW5vRE9NKFwiYVwiKTtcbiAgICBsaW5rLmFkZENsYXNzKFwiZ2l0aHViLWJhZGdlXCIpO1xuICAgIGxpbmsubm9kZS5ocmVmID0gXCJodHRwczovL2dpdGh1Yi5jb20vbTlqL25hbm9fbW9kdWxlcy9hY3Rpb25zXCI7XG4gICAgY29uc3QgZ2l0aHViQmFkZ2VMYWJlbCA9IG5ldyBOYW5vRE9NKFwiZGl2XCIpO1xuICAgIGdpdGh1YkJhZGdlTGFiZWwuYWRkQ2xhc3MoXCJnaXRodWItYmFkZ2UtbGFiZWxcIik7XG4gICAgZ2l0aHViQmFkZ2VMYWJlbC5zZXRJbm5lckhUTUwoXCJuYW5vX21vZHVsZXNcIik7XG4gICAgY29uc3QgZ2l0aHViQmFkZ2VTdGF0dXMgPSBuZXcgTmFub0RPTShcImRpdlwiKTtcbiAgICBnaXRodWJCYWRnZVN0YXR1cy5hZGRDbGFzcyhcImdpdGh1Yi1iYWRnZS1zdGFnZVwiKTtcbiAgICBnaXRodWJCYWRnZVN0YXR1cy5zZXRJbm5lckhUTUwoXCJBQ1RJT05TXCIpO1xuICAgIGxpbmsuYXBwZW5kQ2hpbGQoZ2l0aHViQmFkZ2VMYWJlbC5ub2RlKTtcbiAgICBsaW5rLmFwcGVuZENoaWxkKGdpdGh1YkJhZGdlU3RhdHVzLm5vZGUpO1xuICAgIG5vZGUuYXBwZW5kQ2hpbGQobGluay5ub2RlKTtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxufVxuIiwiaW1wb3J0IE5hbm9ET00gZnJvbSBcIi4uL2FwcC9OYW5vRE9NXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlciBleHRlbmRzIE5hbm9ET00ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZXNfdGl0bGVcIik7XG4gICAgdGhpcy5zZXRJbm5lckhUTUwoXCJOYW5vTW9kdWxlc1wiKTtcbiAgICByZXR1cm4gdGhpcy5ub2RlO1xuICB9XG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbmFuby1tb2R1bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xub3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25hbm8tbW9kdWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgTmFub01vZHVsZXMgZnJvbSBcIi4vYXBwL05hbm9Nb2R1bGVzXCI7XG5pbXBvcnQgQXBwQ29udGFpbmVyIGZyb20gXCIuL2NvbXBvbmVudHMvQXBwQ29udGFpbmVyXCI7XG5pbXBvcnQgXCIuL25hbm8tbW9kdWxlcy5jc3NcIjtcblxuY29uc3QgYXBwID0gbmV3IEFwcENvbnRhaW5lcigpO1xuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhcHApO1xuTmFub01vZHVsZXMoKTtcbiIsImltcG9ydCBOYW5vRE9NIGZyb20gXCIuLi9hcHAvTmFub0RPTVwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi9Gb290ZXJcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vSGVhZGVyXCI7XG5pbXBvcnQgTW9kdWxlcyBmcm9tIFwiLi9Nb2R1bGVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcENvbnRhaW5lciBleHRlbmRzIE5hbm9ET00ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYWRkQ2xhc3MoXCJuYW5vX21vZHVsZXNfY29udGFpbmVyXCIpO1xuICAgIHRoaXMuYXBwZW5kQ2hpbGQobmV3IEhlYWRlcigpKTtcbiAgICB0aGlzLmFwcGVuZENoaWxkKG5ldyBNb2R1bGVzKCkubm9kZSk7XG4gICAgdGhpcy5hcHBlbmRDaGlsZChuZXcgRm9vdGVyKCkpO1xuICAgIHJldHVybiB0aGlzLm5vZGU7XG4gIH1cbn1cbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAqLFxuYm9keSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYW5vX21vZHVsZXNfY29udGFpbmVyIHtcbiAgZmxleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuLm5hbm9fbW9kdWxlc190aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ubmFub19tb2R1bGVzX21vZHVsZXMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMjBweCwgMWZyKSk7XG4gIGdyaWQtZ2FwOiA4cHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZDogI2VlZTtcbiAgZmxleDogMTtcbiAgZ3JpZC1hdXRvLXJvd3M6IG1heC1jb250ZW50O1xufVxuXG4ubmFub19tb2R1bGVzX21vZHVsZSB7XG4gIGJveC1zaGFkb3c6IDBweCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjMDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5uYW5vX21vZHVsZV9uYW1lLFxuLm5hbm9fbW9kdWxlX2Rlc2NyaXB0aW9uLFxuLm5hbm9fbW9kdWxlX291dHB1dCB7XG4gIHBhZGRpbmc6IDAgOHB4O1xufVxuXG4ubmFub19tb2R1bGVfbmFtZSB7XG4gIHBhZGRpbmctdG9wOiA4cHg7XG59XG5cbi5uYW5vX21vZHVsZV9vdXRwdXQge1xuICBwYWRkaW5nLWJvdHRvbTogOHB4O1xufVxuXG4ubmFub19tb2R1bGVfb3V0cHV0X2NvbnRhaW5lciB7XG4gIGZsZXg6IDE7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYW5vX21vZHVsZXNfbm9fbW9kdWxlcyB7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLm5hbm9fbW9kdWxlc19tb2R1bGVfZXJyb3Ige1xuICBjb2xvcjogI2YwMDtcbn1cblxuLm5hbm9fbW9kdWxlX291dHB1dCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5uYW5vX21vZHVsZV9vdXRwdXRfcmVzdHJpY3RlZF9zY3JvbGxhYmxlIHtcbiAgbWF4LWhlaWdodDogOTNweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ucHVsc2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAwIDhweDtcbn1cblxuLnB1bHNlX2RvdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDE2cHg7XG4gIGhlaWdodDogOHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQ6IHNpbHZlcjtcbiAgYW5pbWF0aW9uOiBwdWxzZSBlYXNlLWluLW91dCAxcyBpbmZpbml0ZTtcbn1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5leHBhbmRlciB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5uYW5vX21vZHVsZXNfZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDhweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiA4cHg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5uYW5vX21vZHVsZXNfZm9vdGVyX3JvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbn1cblxuLm5hbm9fbW9kdWxlc19mb290ZXJfYmFkZ2Uge1xuICBtYXJnaW4tbGVmdDogOHB4O1xuICBtYXgtaGVpZ2h0OiAxNnB4O1xufVxuXG4uZ2l0aHViLWJhZGdlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzMzMztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmdpdGh1Yi1iYWRnZS1sYWJlbCB7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMjI7XG59XG5cbi5naXRodWItYmFkZ2Utc3RhZ2Uge1xuICBwYWRkaW5nOiA0cHggOHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG4uZ2l0aHViLWJhZGdlLXN0YXR1cyB7XG4gIHBhZGRpbmc6IDRweCA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xufVxuXG4ud29ya2Zsb3ctc3RhdHVzIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiA4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG59XG5cbi53b3JrZmxvdy1zdGF0dXMtcHJvZ3Jlc3Npbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBnb2xkZW5yb2Q7XG59XG5cbi53b3JrZmxvdy1zdGF0dXMtZmFpbGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xufVxuXG4ud29ya2Zsb3ctc3RhdHVzLXN1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbnllbGxvdztcbn1cblxuQGtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICBiYWNrZ3JvdW5kOiBzaWx2ZXI7XG4gIH1cbiAgMjUlIHtcbiAgICBiYWNrZ3JvdW5kOiBnb2xkZW5yb2Q7XG4gIH1cbiAgNTAlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBzaWx2ZXI7XG4gIH1cbiAgNzUlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbnllbGxvdztcbiAgfVxuICAxMDAlIHtcbiAgICBiYWNrZ3JvdW5kOiBzaWx2ZXI7XG4gIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL25hbm8tbW9kdWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0VBRUUsU0FBUztFQUNULFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sUUFBUTtFQUNSLFNBQVM7RUFDVCxPQUFPO0VBQ1AsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLE9BQU87RUFDUCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFVBQVU7RUFDVixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0VBQ1YsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsNERBQTREO0VBQzVELGFBQWE7RUFDYixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLE9BQU87RUFDUCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSwyQ0FBMkM7RUFDM0MsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7OztFQUdFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxPQUFPO0VBQ1AsWUFBWTtFQUNaLHNCQUFzQjtFQUN0QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsU0FBUztFQUNULE9BQU87QUFDVDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGFBQWE7RUFDYixRQUFRO0VBQ1IsZUFBZTtFQUNmLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUNyQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsVUFBVTtFQUNWLFdBQVc7RUFDWCxvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHNCQUFzQjtFQUN0QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRTtJQUNFLGtCQUFrQjtFQUNwQjtFQUNBO0lBQ0UscUJBQXFCO0VBQ3ZCO0VBQ0E7SUFDRSx3QkFBd0I7RUFDMUI7RUFDQTtJQUNFLDZCQUE2QjtFQUMvQjtFQUNBO0lBQ0Usa0JBQWtCO0VBQ3BCO0FBQ0ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKixcXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxufVxcblxcbmJvZHkge1xcbiAgZm9udC1zaXplOiAxZW07XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG4gIGJhY2tncm91bmQ6ICMwMDA7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuXFxuLm5hbm9fbW9kdWxlc19jb250YWluZXIge1xcbiAgZmxleDogMTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgcGFkZGluZzogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbi5uYW5vX21vZHVsZXNfdGl0bGUge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XFxuICBjb2xvcjogI2ZmZjtcXG4gIHBvc2l0aW9uOiBzdGlja3k7XFxuICB0b3A6IDA7XFxuICB6LWluZGV4OiAxO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5uYW5vX21vZHVsZXNfbW9kdWxlcyB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMzIwcHgsIDFmcikpO1xcbiAgZ3JpZC1nYXA6IDhweDtcXG4gIHBhZGRpbmc6IDhweDtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxuICBmbGV4OiAxO1xcbiAgZ3JpZC1hdXRvLXJvd3M6IG1heC1jb250ZW50O1xcbn1cXG5cXG4ubmFub19tb2R1bGVzX21vZHVsZSB7XFxuICBib3gtc2hhZG93OiAwcHggNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGNvbG9yOiAjMDAwO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4ubmFub19tb2R1bGVfbmFtZSxcXG4ubmFub19tb2R1bGVfZGVzY3JpcHRpb24sXFxuLm5hbm9fbW9kdWxlX291dHB1dCB7XFxuICBwYWRkaW5nOiAwIDhweDtcXG59XFxuXFxuLm5hbm9fbW9kdWxlX25hbWUge1xcbiAgcGFkZGluZy10b3A6IDhweDtcXG59XFxuXFxuLm5hbm9fbW9kdWxlX291dHB1dCB7XFxuICBwYWRkaW5nLWJvdHRvbTogOHB4O1xcbn1cXG5cXG4ubmFub19tb2R1bGVfb3V0cHV0X2NvbnRhaW5lciB7XFxuICBmbGV4OiAxO1xcbiAgcGFkZGluZzogOHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcXG4gIGNvbG9yOiAjZmZmO1xcbn1cXG5cXG4ubmFub19tb2R1bGVzX25vX21vZHVsZXMge1xcbiAgcGFkZGluZzogOHB4O1xcbn1cXG5cXG4ubmFub19tb2R1bGVzX21vZHVsZV9lcnJvciB7XFxuICBjb2xvcjogI2YwMDtcXG59XFxuXFxuLm5hbm9fbW9kdWxlX291dHB1dCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5uYW5vX21vZHVsZV9vdXRwdXRfcmVzdHJpY3RlZF9zY3JvbGxhYmxlIHtcXG4gIG1heC1oZWlnaHQ6IDkzcHg7XFxuICBvdmVyZmxvdzogYXV0bztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHRvcDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgbGVmdDogMDtcXG59XFxuXFxuLnB1bHNlIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcGFkZGluZzogMCA4cHg7XFxufVxcblxcbi5wdWxzZV9kb3Qge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDE2cHg7XFxuICBoZWlnaHQ6IDhweDtcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gIGJhY2tncm91bmQ6IHNpbHZlcjtcXG4gIGFuaW1hdGlvbjogcHVsc2UgZWFzZS1pbi1vdXQgMXMgaW5maW5pdGU7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmV4cGFuZGVyIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4ubmFub19tb2R1bGVzX2Zvb3RlciB7XFxuICBiYWNrZ3JvdW5kOiAjMDAwO1xcbiAgY29sb3I6ICNmZmY7XFxuICBwYWRkaW5nOiA4cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA4cHg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLm5hbm9fbW9kdWxlc19mb290ZXJfcm93IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbn1cXG5cXG4ubmFub19tb2R1bGVzX2Zvb3Rlcl9iYWRnZSB7XFxuICBtYXJnaW4tbGVmdDogOHB4O1xcbiAgbWF4LWhlaWdodDogMTZweDtcXG59XFxuXFxuLmdpdGh1Yi1iYWRnZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICMzMzM7XFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuXFxuLmdpdGh1Yi1iYWRnZS1sYWJlbCB7XFxuICBwYWRkaW5nOiA0cHggOHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIyMjtcXG59XFxuXFxuLmdpdGh1Yi1iYWRnZS1zdGFnZSB7XFxuICBwYWRkaW5nOiA0cHggOHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcXG59XFxuXFxuLmdpdGh1Yi1iYWRnZS1zdGF0dXMge1xcbiAgcGFkZGluZzogNHB4IDhweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xcbn1cXG5cXG4ud29ya2Zsb3ctc3RhdHVzIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgd2lkdGg6IDhweDtcXG4gIGhlaWdodDogOHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgbWFyZ2luLWxlZnQ6IDhweDtcXG59XFxuXFxuLndvcmtmbG93LXN0YXR1cy1wcm9ncmVzc2luZyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBnb2xkZW5yb2Q7XFxufVxcblxcbi53b3JrZmxvdy1zdGF0dXMtZmFpbGVkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG59XFxuXFxuLndvcmtmbG93LXN0YXR1cy1zdWNjZXNzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVueWVsbG93O1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHB1bHNlIHtcXG4gIDAlIHtcXG4gICAgYmFja2dyb3VuZDogc2lsdmVyO1xcbiAgfVxcbiAgMjUlIHtcXG4gICAgYmFja2dyb3VuZDogZ29sZGVucm9kO1xcbiAgfVxcbiAgNTAlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogc2lsdmVyO1xcbiAgfVxcbiAgNzUlIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgYmFja2dyb3VuZDogc2lsdmVyO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsImlkIiwiX2siLCJwdXNoIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIk5hbm9ET00iLCJub2RlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY29uc3RydWN0b3IiLCJ0YWciLCJhcHBlbmRDaGlsZCIsImNoaWxkIiwic2V0SWQiLCJzZXRJbm5lckhUTUwiLCJpbm5lckhUTUwiLCJhZGRDbGFzcyIsImNsYXNzTmFtZSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZUNsYXNzIiwicmVtb3ZlIiwiTW9kdWxlIiwibW9kaWQiLCJzdXBlciIsImdldE1vZHVsZVRlbXBsYXRlIiwibW9kdWxlQ29udGFpbmVyIiwibW9kdWxlTmFtZSIsImdldE1vZHVsZU5hbWVUZW1wbGF0ZSIsIm1vZHVsZURlc2NyaXB0aW9uIiwiZ2V0TW9kdWxlRGVzY3JpcHRpb25UZW1wbGF0ZSIsIm1vZHVsZU91dHB1dExhYmVsUm93IiwiZ2V0TW9kdWxlT3V0cHV0TGFiZWxSb3dUZW1wbGF0ZSIsIm1vZHVsZU91dHB1dCIsImdldE1vZHVsZU91dHB1dFRlbXBsYXRlIiwiYm9sZExhYmVsIiwidmFsdWUiLCJwdWxzZSIsInB1bHNlRG90IiwiZXhwYW5kZXIiLCJ2ZXJzaW9uTGFiZWwiLCJ2ZXJzaW9uIiwibW9kdWxlT3V0cHV0Q29udGFpbmVyIiwiZWxlbUlkIiwiZWxlbSIsImdldEVsZW1lbnRCeUlkIiwidXBkYXRlTmFtZSIsIm5hbWUiLCJ1cGRhdGVEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwidXBkYXRlVmVyc2lvbiIsInVwZGF0ZU91dHB1dCIsIm91dHB1dCIsImVuYWJsZVB1bHNlIiwiTW9kdWxlcyIsImluc2VydE1vZHVsZVRlbXBsYXRlIiwibW9kdWxlVGVtcGxhdGUiLCJOYW5vT3V0cHV0IiwicHJpbnQiLCJuZXdPdXRwdXQiLCJwcmludExpbmUiLCJvdXRwdXRDb250YWluZXIiLCJpbm5lclRleHQiLCJwcmVwZW5kIiwiTkFOT01PRFVMRVNfVVJMX1BST0QiLCJNRVRBTU9EVUxFUyIsIk5BTk9NQUlMIiwiTUFJTF9TRU5EX0RFTEFZIiwiUkVDSVBJRU5UUyIsImRlbGF5Iiwib25SZWNlaXZlIiwibWFpbElkIiwibWFpbEhhbmRsZXIiLCJzZW5kIiwibWFpbCIsInRtciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJBcnJheSIsImlzQXJyYXkiLCJ0byIsImJyb2FkY2FzdFRvIiwiY29uc29sZSIsImxvZyIsImFzeW5jIiwiZmV0Y2hGaWxlIiwicGF0aCIsImltcG9ydCIsImdldE5hbm9Nb2R1bGVzVVJMIiwic2V0dXBNZXRhTW9kdWxlIiwibW9kdWxlUGF0aCIsIm1vZHVsZVZlcnNpb24iLCJhY3R1YWxQYXRoIiwic3Vic3RyaW5nIiwiaW5zdGFuY2UiLCJkZWZhdWx0IiwiTU9EVUxFX05BTUUiLCJNT0RVTEVfREVTQ1JJUFRJT04iLCJNT0RVTEVfVkVSU0lPTiIsIm1vZHVsZU1haWxJZCIsIk1PRFVMRV9NQUlMX0lEIiwibW9kdWxlTWFpbEhhbmRsZXIiLCJNT0RVTEVfTUFJTF9IQU5ETEVSIiwiTU9EVUxFX09VVFBVVCIsIk1PRFVMRV9NQUlMIiwibSIsIk1PRFVMRV9JRCIsImV4ZWNNb2R1bGUiLCJNT0RVTEVfUFVMU0UiLCJNT0RVTEVfTUFJTiIsImVycm9yIiwiY29kZSIsIm1lc3NhZ2UiLCJGb290ZXIiLCJmb290ZXJSb3cxIiwiZm9vdGVyUm93MiIsImxpbmsiLCJocmVmIiwiZ2l0aHViQmFkZ2VMYWJlbCIsImdpdGh1YkJhZGdlU3RhdHVzIiwiSGVhZGVyIiwib3B0aW9ucyIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsImxvY2FscyIsImFwcCIsImJvZHkiLCJOYW5vTW9kdWxlc0luZGV4IiwiaW1wb3J0ZWRNb2R1bGUiLCJjdXJyZW50VVJMIiwiZSIsImdldE5hbm9Nb2R1bGVJbmRleCIsIk1PRFVMRVMiLCJmZXRjaE5hbm9Nb2R1bGVzIiwibmFub01vZHVsZXNNb2R1bGVDb250YWluZXIiLCJuYW5vTW9kdWxlUGF0aCIsImVudHJpZXMiLCJOYW5vTW9kdWxlcyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsInVwZGF0ZSIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJlbGVtZW50IiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSJdLCJzb3VyY2VSb290IjoiIn0=