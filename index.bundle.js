"use strict";(self.webpackChunknano_modules=self.webpackChunknano_modules||[]).push([[57,896],{89:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var o="",t=void 0!==e[5];return e[4]&&(o+="@supports (".concat(e[4],") {")),e[2]&&(o+="@media ".concat(e[2]," {")),t&&(o+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),o+=n(e),t&&(o+="}"),e[2]&&(o+="}"),e[4]&&(o+="}"),o})).join("")},e.i=function(n,o,t,a,s){"string"==typeof n&&(n=[[null,n,void 0]]);var d={};if(t)for(var r=0;r<this.length;r++){var i=this[r][0];null!=i&&(d[i]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);t&&d[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),o&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=o):A[2]=o),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},963:n=>{n.exports=function(n){var e=n[1],o=n[3];if(!o)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),s="/*# ".concat(a," */");return[e].concat([s]).join("\n")}return[e].join("\n")}},70:(n,e,o)=>{async function t(){console.log("> Nanomod.js _");const n=[];try{const e=await async function(){try{let n=[];return n=await import(a),n}catch(n){console.log(n)}}();if(e){const o=e.default;if(Array.isArray(o)&&o.length>0)for(const e of o)n.push(e)}}catch(n){const{code:e,message:o}=n;console.log(`${e}: ${o}`)}return n}o.d(e,{A:()=>t});const a="https://M9J.github.io/nano_modules/index.js"},651:(n,e,o)=>{o.d(e,{h:()=>t});const t={"nano-modules":{build:"https://github.com/M9J/nano-modules/actions/workflows/actions.yml/badge.svg",deploy:"https://github.com/M9J/nano-modules/actions/workflows/pages/pages-build-deployment/badge.svg"},nano_modules:{build:"https://github.com/M9J/nano_modules/actions/workflows/actions.yml/badge.svg",deploy:"https://github.com/M9J/nano_modules/actions/workflows/pages/pages-build-deployment/badge.svg"}}},731:(n,e,o)=>{o.a(n,(async(n,e)=>{try{o(508);var t=o(70),a=o(651);function s(){const n=document.createElement("div");n.classList.add("nano_modules_container");const e=document.createElement("div");e.classList.add("nano_modules_title"),e.innerHTML="nano_modules";const o=document.createElement("div");return o.classList.add("nano_modules_modules"),o.id="nano_modules_modules",n.appendChild(e),n.appendChild(o),n.appendChild(p()),n}document.body.appendChild(s());const d=await(0,t.A)();if(d){const m=document.getElementById("nano_modules_modules");d.length>0?m.innerHTML="":m.innerHTML="<div class='nano_modules_no_modules'>No Modules found</div>";for(const[f,_]of d.entries())_&&i(_,f)}function r(n){if(n)return n.toString().replaceAll("() => import(","").replaceAll(")","").replaceAll('"',"")}async function i(n,e){let o=r(n),t="...",a=!1,s="...",d="...";const i=l(o,t,s,d,e);document.getElementById("nano_modules_modules").innerHTML+=i;const u=new((await n()).default);if(o=u.MODULE_NAME?u.MODULE_NAME:"-",t=u.MODULE_DESCRIPTION?u.MODULE_DESCRIPTION:"-",a=u.MODULE_PULSE||!1,s=u.MODULE_VERSION?u.MODULE_VERSION:"-",u.MODULE_MAIN&&"function"==typeof u.MODULE_MAIN)try{const n=A(e);d=await u.MODULE_MAIN(n)||""}catch(n){d=`<div class="nano_modules_module_error">${n.code}: ${n.message}</div>`}document.getElementById(`nano_module_${e}_name`).innerHTML=o,document.getElementById(`nano_module_${e}_description`).innerHTML=t,document.getElementById(`nano_module_${e}_version`).innerHTML=s,document.getElementById(`nano_module_${e}_output`).innerHTML=d,a&&document.getElementById(`nano_module_${e}_pulse`).classList.remove("hidden")}function l(n,e,o,t,a){return`\n<div class="nano_modules_module" id="nano_module_${a}">\n  <div class="nano_module_name">\n    <span class="bold">Name:</span>\n    <span id="nano_module_${a}_name">${n}</span>\n  </div>\n  <div class="nano_module_description">\n    <span class="bold">Description:</span>\n    <span id="nano_module_${a}_description">${e}</span>\n  </div>\n  <div class="nano_module_version">\n    <span class="bold">Version:</span>\n    <span id="nano_module_${a}_version">${o} </span>\n  </div>\n  <div class="nano_module_output">\n    <span class="bold">Output:</span>\n    &nbsp;<span\n      class="pulse hidden"\n      id="nano_module_${a}_pulse"\n    ></span>\n  </div>\n  <div\n    class="nano_module_output_restricted_scrollable"\n    id="nano_module_${a}_output"\n  >\n    ${t}\n  </div>\n</div>\n`}function A(n){return{print:u(n),printLineBefore:c(n)}}function u(n){return e=>{document.getElementById(`nano_module_${n}_output`).innerHTML=e}}function c(n){return e=>{const o=document.getElementById(`nano_module_${n}_output`),t=document.createElement("div");t.classList.add("nano_module_log"),t.innerHTML=e,o.prepend(t)}}function p(){const n=document.createElement("div");return n.classList.add("nano_modules_footer"),n.innerHTML=`\n  <div class="nano_modules_footer_row">\n    nano-modules/build: <img class="nano_modules_footer_badge" src="${a.h["nano-modules"].build}"/>\n  </div>\n  <div class="nano_modules_footer_row">\n    nano-modules/deploy: <img class="nano_modules_footer_badge" src="${a.h["nano-modules"].deploy}"/>\n  </div>\n  <div class="nano_modules_footer_row">\n    nano_modules/build: <img class="nano_modules_footer_badge" src="${a.h.nano_modules.build}"/>\n  </div>\n  <div class="nano_modules_footer_row">\n    nano_modules/deploy: <img class="nano_modules_footer_badge" src="${a.h.nano_modules.deploy}"/>\n  </div>\n  `,n}e()}catch(g){e(g)}}),1)},497:(n,e,o)=>{o.d(e,{A:()=>r});var t=o(963),a=o.n(t),s=o(89),d=o.n(s)()(a());d.push([n.id,"*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  padding: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.bold {\n  font-weight: bolder;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 8vh;\n  overflow: auto;\n}\n\n.pulse {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: grey;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n@keyframes pulsating {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: greenyellow;\n  }\n  50% {\n    background: silver;\n  }\n  75% {\n    background: goldenrod;\n  }\n  100% {\n    background: silver;\n  }\n}\n","",{version:3,sources:["webpack://./src/nano-modules.css"],names:[],mappings:"AAAA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,gBAAgB;AAClB;;AAEA;EACE,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,MAAM;EACN,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,4DAA4D;EAC5D,aAAa;EACb,YAAY;EACZ,gBAAgB;EAChB,OAAO;EACP,2BAA2B;AAC7B;;AAEA;EACE,2CAA2C;EAC3C,YAAY;EACZ,oCAAoC;EACpC,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,qBAAqB;EACrB,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,gBAAgB;EAChB,wCAAwC;AAC1C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,QAAQ;EACR,eAAe;EACf,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF;;AAEA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,kBAAkB;EACpB;EACA;IACE,qBAAqB;EACvB;EACA;IACE,kBAAkB;EACpB;AACF",sourcesContent:["*,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-size: 1em;\n  font-family: monospace;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: #000;\n}\n\n.nano_modules_container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.nano_modules_title {\n  font-weight: bolder;\n  padding: 8px;\n  background-color: #000;\n  color: #fff;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.nano_modules_modules {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 8px;\n  padding: 8px;\n  background: #eee;\n  flex: 1;\n  grid-auto-rows: max-content;\n}\n\n.nano_modules_module {\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n  padding: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  background: #fff;\n}\n\n.nano_modules_no_modules {\n  padding: 8px;\n}\n\n.nano_modules_module_error {\n  color: #f00;\n}\n\n.bold {\n  font-weight: bolder;\n}\n\n.nano_module_output {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.nano_module_output_restricted_scrollable {\n  max-height: 8vh;\n  overflow: auto;\n}\n\n.pulse {\n  display: inline-block;\n  width: 16px;\n  height: 8px;\n  border-radius: 8px;\n  background: grey;\n  animation: pulse ease-in-out 1s infinite;\n}\n\n.hidden {\n  display: none;\n}\n\n.nano_modules_footer {\n  background: #000;\n  color: #fff;\n  padding: 8px;\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.nano_modules_footer_row {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n}\n\n.nano_modules_footer_badge {\n  margin-left: 8px;\n  max-height: 16px;\n}\n\n@keyframes pulsating {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes pulse {\n  0% {\n    background: silver;\n  }\n  25% {\n    background: greenyellow;\n  }\n  50% {\n    background: silver;\n  }\n  75% {\n    background: goldenrod;\n  }\n  100% {\n    background: silver;\n  }\n}\n"],sourceRoot:""}]);const r=d},508:(n,e,o)=>{var t=o(72),a=o.n(t),s=o(825),d=o.n(s),r=o(659),i=o.n(r),l=o(56),A=o.n(l),u=o(540),c=o.n(u),p=o(113),m=o.n(p),f=o(497),_={};_.styleTagTransform=m(),_.setAttributes=A(),_.insert=i().bind(null,"head"),_.domAPI=d(),_.insertStyleElement=c(),a()(f.A,_),f.A&&f.A.locals&&f.A.locals},72:n=>{var e=[];function o(n){for(var o=-1,t=0;t<e.length;t++)if(e[t].identifier===n){o=t;break}return o}function t(n,t){for(var s={},d=[],r=0;r<n.length;r++){var i=n[r],l=t.base?i[0]+t.base:i[0],A=s[l]||0,u="".concat(l," ").concat(A);s[l]=A+1;var c=o(u),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==c)e[c].references++,e[c].updater(p);else{var m=a(p,t);t.byIndex=r,e.splice(r,0,{identifier:u,updater:m,references:1})}d.push(u)}return d}function a(n,e){var o=e.domAPI(e);return o.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;o.update(n=e)}else o.remove()}}n.exports=function(n,a){var s=t(n=n||[],a=a||{});return function(n){n=n||[];for(var d=0;d<s.length;d++){var r=o(s[d]);e[r].references--}for(var i=t(n,a),l=0;l<s.length;l++){var A=o(s[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}s=i}}},659:n=>{var e={};n.exports=function(n,o){var t=function(n){if(void 0===e[n]){var o=document.querySelector(n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(n){o=null}e[n]=o}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(o)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,o)=>{n.exports=function(n){var e=o.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(o){!function(n,e,o){var t="";o.supports&&(t+="@supports (".concat(o.supports,") {")),o.media&&(t+="@media ".concat(o.media," {"));var a=void 0!==o.layer;a&&(t+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),t+=o.css,a&&(t+="}"),o.media&&(t+="}"),o.supports&&(t+="}");var s=o.sourceMap;s&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,o)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},n=>{n(n.s=731)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,